diagram:
  renderer: "elk"

users:
  #  - name: admin # bao admin
  - name: liquidator # calls the various liquidators (maybe create )
#  - name: xHolderRedeemer # user who mint/redeems xTokens
#  - name: fHolderLiquidator # user who mints/liquidates fTokens
#  - name: fHolderRedeemer # user who mint/redeems fTokens

format:
  - type: uint256
    unit: ether
  - reading: latestAnswer
    type: int256
    unit: 8
  - reading: latestRoundData.answer
    type: int256
    unit: 8
  - reading: rewardData.lastUpdate
    precision: -2
  - reading: available_supply
    precision: 2
  - reading: price
    contract: MockFxPriceOracle
    precision: 1
  - reading: getPrice._safePrice
    precision: 1
  - reading: getPrice._minUnsafePrice
    precision: 1
  - reading: getPrice._maxUnsafePrice
    precision: 1
  - reading: balanceOf
    contract: Voting Escrow
    precision: 1
  - reading: balanceOf
    precision: 2
  - reading: emaLeverageRatio.lastTime
    precision: -2
  - reading: emaLeverageRatio.lastEmaValue
    precision: -13
  - type: uint256
    unit: ether
  - reading: latestAnswer
    type: int256
    unit: 8
  - reading: latestRoundData.answer
    type: int256
    unit: 8

  # variable depending when run
  - reading: pendingRewards.0
    precision: 3
  - reading: pendingRewards.1
    precision: 3
  - contract: "Curve DAO Token"
    reading: available_supply
    precision: 0
  - contract: FXN
    reading: available_supply
    precision: 1
  - reading: totalSupply
    precision: 0
  - reading: price_oracle
    precision: 9
  - reading: leverageRatio
    precision: 3 # because the price_oracle is not reliable, this isn't
  - reading: collateralRatio
    precision: 3
  - reading: getCurrentNav._baseNav
    precision: 2
  - reading: getCurrentNav._fNav
    precision: 3
  - reading: getCurrentNav._xNav
    precision: 3
  - reading: pendingRewards
    precision: 4

  # no formatting
  - reading: chainlinkMinMessageCount
  - reading: chainlinkMessageExpiration
  - reading: start_epoch_time
  - reading: getChainId
  - reading: getThreshold
  - reading: nonce
  - reading: nonces
  - reading: decimals
  - reading: time_total
  - reading: numTotalSupplyHistory
  - reading: latestRoundData.startedAt
  - reading: latestRoundData.updatedAt
  - reading: latestTimestamp
  - reading: version
  - reading: getRewardCount
