readings:
  - BoostableRebalancePool__0: '0xc6dEe5913e010895F3702bc43a40d661B13a40BD'
    contract: BoostableRebalancePool
    functions:
      - asset: address
        readings:
          - asset: FractionalToken
      - balanceOf: uint256
        readings:
          - balanceOf($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0.0 # {unit:ether,precision:2}'
          - balanceOf(admin): '0.0 # {unit:ether,precision:2}'
          - balanceOf(BoostableRebalancePool__1): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Booster): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Curve_DAO_Token): '0.0 # {unit:ether,precision:2}'
          - balanceOf(fHolderLiquidator): '0.0 # {unit:ether,precision:2}'
          - balanceOf(fHolderRedeemer): '0.0 # {unit:ether,precision:2}'
          - balanceOf(fMinter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FractionalToken): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FxETHTwapOracle): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FxnDepositor): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FxnVoterProxy): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Gauge_Controller): '0.0 # {unit:ether,precision:2}'
          - balanceOf(GnosisSafe__0): '0.0 # {unit:ether,precision:2}'
          - balanceOf(GnosisSafe__1): '0.0 # {unit:ether,precision:2}'
          - balanceOf(LeveragedToken): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Lido): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Market): '0.0 # {unit:ether,precision:2}'
          - balanceOf(PlatformFeeSpliter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalancePool): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalancePoolRegistry): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalancePoolSplitter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalanceWithBonusToken__0): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalanceWithBonusToken__1): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalanceWithBonusToken__2): '0.0 # {unit:ether,precision:2}'
          - balanceOf(ReservePool): '0.0 # {unit:ether,precision:2}'
          - balanceOf(SmartWalletWhitelist): '0.0 # {unit:ether,precision:2}'
          - balanceOf(StETHAndxETHWrapper): '0.0 # {unit:ether,precision:2}'
          - balanceOf(stETHTreasury): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Token_Minter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Voting_Escrow): '0.0 # {unit:ether,precision:2}'
          - balanceOf(WstETH): '0.0 # {unit:ether,precision:2}'
          - balanceOf(wstETHWrapper): '0.0 # {unit:ether,precision:2}'
          - balanceOf(xHolderRedeemer): '0.0 # {unit:ether,precision:2}'
          - balanceOf(xMinter): '0.0 # {unit:ether,precision:2}'
      - baseToken: address
        readings:
          - baseToken: Lido
      - boostCheckpoint.historyIndex: uint32
        boostCheckpoint.veBalance: uint112
        boostCheckpoint.veSupply: uint112
        readings:
          - boostCheckpoint($0x11E91BB6d1334585AA37D8F4fde3932C7960B938).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint($0x11E91BB6d1334585AA37D8F4fde3932C7960B938).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint($0x11E91BB6d1334585AA37D8F4fde3932C7960B938).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(admin).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(admin).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(admin).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(BoostableRebalancePool__1).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(BoostableRebalancePool__1).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(BoostableRebalancePool__1).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Booster).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Booster).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Booster).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Curve_DAO_Token).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Curve_DAO_Token).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Curve_DAO_Token).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(fHolderLiquidator).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(fHolderLiquidator).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(fHolderLiquidator).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(fHolderRedeemer).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(fHolderRedeemer).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(fHolderRedeemer).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(fMinter).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(fMinter).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(fMinter).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(FractionalToken).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(FractionalToken).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(FractionalToken).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(FxETHTwapOracle).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(FxETHTwapOracle).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(FxETHTwapOracle).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(FxnDepositor).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(FxnDepositor).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(FxnDepositor).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(FxnVoterProxy).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(FxnVoterProxy).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(FxnVoterProxy).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Gauge_Controller).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Gauge_Controller).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Gauge_Controller).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(GnosisSafe__0).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(GnosisSafe__0).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(GnosisSafe__0).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(GnosisSafe__1).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(GnosisSafe__1).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(GnosisSafe__1).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(LeveragedToken).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(LeveragedToken).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(LeveragedToken).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Lido).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Lido).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Lido).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Market).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Market).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Market).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(PlatformFeeSpliter).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(PlatformFeeSpliter).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(PlatformFeeSpliter).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalancePool).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalancePool).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalancePool).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalancePoolRegistry).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalancePoolRegistry).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalancePoolRegistry).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalancePoolSplitter).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalancePoolSplitter).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalancePoolSplitter).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalanceWithBonusToken__0).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalanceWithBonusToken__0).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalanceWithBonusToken__0).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalanceWithBonusToken__1).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalanceWithBonusToken__1).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalanceWithBonusToken__1).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalanceWithBonusToken__2).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalanceWithBonusToken__2).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalanceWithBonusToken__2).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(ReservePool).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(ReservePool).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(ReservePool).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(SmartWalletWhitelist).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(SmartWalletWhitelist).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(SmartWalletWhitelist).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(StETHAndxETHWrapper).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(StETHAndxETHWrapper).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(StETHAndxETHWrapper).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(stETHTreasury).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(stETHTreasury).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(stETHTreasury).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Token_Minter).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Token_Minter).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Token_Minter).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Voting_Escrow).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Voting_Escrow).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Voting_Escrow).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(WstETH).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(WstETH).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(WstETH).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(wstETHWrapper).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(wstETHWrapper).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(wstETHWrapper).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(xHolderRedeemer).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(xHolderRedeemer).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(xHolderRedeemer).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(xMinter).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(xMinter).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(xMinter).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
      - distributors: address
        readings:
          - distributors($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0x0000000000000000000000000000000000000000'
          - distributors(admin): '0x0000000000000000000000000000000000000000'
          - distributors(BoostableRebalancePool__1): '0x0000000000000000000000000000000000000000'
          - distributors(Booster): '0x0000000000000000000000000000000000000000'
          - distributors(Curve_DAO_Token): RebalancePoolSplitter
          - distributors(fHolderLiquidator): '0x0000000000000000000000000000000000000000'
          - distributors(fHolderRedeemer): '0x0000000000000000000000000000000000000000'
          - distributors(fMinter): '0x0000000000000000000000000000000000000000'
          - distributors(FractionalToken): '0x0000000000000000000000000000000000000000'
          - distributors(FxETHTwapOracle): '0x0000000000000000000000000000000000000000'
          - distributors(FxnDepositor): '0x0000000000000000000000000000000000000000'
          - distributors(FxnVoterProxy): '0x0000000000000000000000000000000000000000'
          - distributors(Gauge_Controller): '0x0000000000000000000000000000000000000000'
          - distributors(GnosisSafe__0): '0x0000000000000000000000000000000000000000'
          - distributors(GnosisSafe__1): '0x0000000000000000000000000000000000000000'
          - distributors(LeveragedToken): '0x0000000000000000000000000000000000000000'
          - distributors(Lido): '0x0000000000000000000000000000000000000000'
          - distributors(Market): '0x0000000000000000000000000000000000000000'
          - distributors(PlatformFeeSpliter): '0x0000000000000000000000000000000000000000'
          - distributors(RebalancePool): '0x0000000000000000000000000000000000000000'
          - distributors(RebalancePoolRegistry): '0x0000000000000000000000000000000000000000'
          - distributors(RebalancePoolSplitter): '0x0000000000000000000000000000000000000000'
          - distributors(RebalanceWithBonusToken__0): '0x0000000000000000000000000000000000000000'
          - distributors(RebalanceWithBonusToken__1): '0x0000000000000000000000000000000000000000'
          - distributors(RebalanceWithBonusToken__2): '0x0000000000000000000000000000000000000000'
          - distributors(ReservePool): '0x0000000000000000000000000000000000000000'
          - distributors(SmartWalletWhitelist): '0x0000000000000000000000000000000000000000'
          - distributors(StETHAndxETHWrapper): '0x0000000000000000000000000000000000000000'
          - distributors(stETHTreasury): '0x0000000000000000000000000000000000000000'
          - distributors(Token_Minter): '0x0000000000000000000000000000000000000000'
          - distributors(Voting_Escrow): '0x0000000000000000000000000000000000000000'
          - distributors(WstETH): RebalancePoolSplitter
          - distributors(wstETHWrapper): '0x0000000000000000000000000000000000000000'
          - distributors(xHolderRedeemer): '0x0000000000000000000000000000000000000000'
          - distributors(xMinter): '0x0000000000000000000000000000000000000000'
      - fxn: address
        readings:
          - fxn: Curve_DAO_Token
      - gauge.claimAt: uint64
        gauge.gauge: address
        readings:
          - gauge.claimAt: '0'
          - gauge.gauge: '0x0000000000000000000000000000000000000000'
      - getActiveRewardTokens: address[]
        readings:
          - getActiveRewardTokens:
              - WstETH
              - Curve_DAO_Token
      - getBoostRatio: uint256
        readings:
          - getBoostRatio($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0.0 # {unit:ether}'
          - getBoostRatio(admin): '0.0 # {unit:ether}'
          - getBoostRatio(BoostableRebalancePool__1): '0.0 # {unit:ether}'
          - getBoostRatio(Booster): '0.0 # {unit:ether}'
          - getBoostRatio(Curve_DAO_Token): '0.0 # {unit:ether}'
          - getBoostRatio(fHolderLiquidator): '0.0 # {unit:ether}'
          - getBoostRatio(fHolderRedeemer): '0.0 # {unit:ether}'
          - getBoostRatio(fMinter): '0.0 # {unit:ether}'
          - getBoostRatio(FractionalToken): '0.0 # {unit:ether}'
          - getBoostRatio(FxETHTwapOracle): '0.0 # {unit:ether}'
          - getBoostRatio(FxnDepositor): '0.0 # {unit:ether}'
          - getBoostRatio(FxnVoterProxy): '0.0 # {unit:ether}'
          - getBoostRatio(Gauge_Controller): '0.0 # {unit:ether}'
          - getBoostRatio(GnosisSafe__0): '0.0 # {unit:ether}'
          - getBoostRatio(GnosisSafe__1): '0.0 # {unit:ether}'
          - getBoostRatio(LeveragedToken): '0.0 # {unit:ether}'
          - getBoostRatio(Lido): '0.0 # {unit:ether}'
          - getBoostRatio(Market): '0.0 # {unit:ether}'
          - getBoostRatio(PlatformFeeSpliter): '0.0 # {unit:ether}'
          - getBoostRatio(RebalancePool): '0.0 # {unit:ether}'
          - getBoostRatio(RebalancePoolRegistry): '0.0 # {unit:ether}'
          - getBoostRatio(RebalancePoolSplitter): '0.0 # {unit:ether}'
          - getBoostRatio(RebalanceWithBonusToken__0): '0.0 # {unit:ether}'
          - getBoostRatio(RebalanceWithBonusToken__1): '0.0 # {unit:ether}'
          - getBoostRatio(RebalanceWithBonusToken__2): '0.0 # {unit:ether}'
          - getBoostRatio(ReservePool): '0.0 # {unit:ether}'
          - getBoostRatio(SmartWalletWhitelist): '0.0 # {unit:ether}'
          - getBoostRatio(StETHAndxETHWrapper): '0.0 # {unit:ether}'
          - getBoostRatio(stETHTreasury): '0.0 # {unit:ether}'
          - getBoostRatio(Token_Minter): '0.0 # {unit:ether}'
          - getBoostRatio(Voting_Escrow): '0.0 # {unit:ether}'
          - getBoostRatio(WstETH): '0.0 # {unit:ether}'
          - getBoostRatio(wstETHWrapper): '0.0 # {unit:ether}'
          - getBoostRatio(xHolderRedeemer): '0.0 # {unit:ether}'
          - getBoostRatio(xMinter): '0.0 # {unit:ether}'
      - getHistoricalRewardTokens: address[]
        readings:
          - getHistoricalRewardTokens: []
      - lastAssetLossError: uint256
        readings:
          - lastAssetLossError: '0.0 # {unit:ether}'
      - liquidatableCollateralRatio: uint256
        readings:
          - liquidatableCollateralRatio: '1.3055 # {unit:ether}'
      - market: address
        readings:
          - market: Market
      - minter: address
        readings:
          - minter: Token_Minter
      - numTotalSupplyHistory: uint256
        readings:
          - numTotalSupplyHistory: '136 # {}'
      - pendingRewards.0: uint256
        pendingRewards.1: uint256
        readings:
          - pendingRewards($0x11E91BB6d1334585AA37D8F4fde3932C7960B938).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards($0x11E91BB6d1334585AA37D8F4fde3932C7960B938).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(admin).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(admin).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(BoostableRebalancePool__1).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(BoostableRebalancePool__1).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Booster).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Booster).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Curve_DAO_Token).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Curve_DAO_Token).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(fHolderLiquidator).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(fHolderLiquidator).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(fHolderRedeemer).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(fHolderRedeemer).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(fMinter).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(fMinter).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(FractionalToken).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(FractionalToken).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(FxETHTwapOracle).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(FxETHTwapOracle).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(FxnDepositor).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(FxnDepositor).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(FxnVoterProxy).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(FxnVoterProxy).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Gauge_Controller).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Gauge_Controller).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(GnosisSafe__0).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(GnosisSafe__0).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(GnosisSafe__1).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(GnosisSafe__1).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(LeveragedToken).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(LeveragedToken).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Lido).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Lido).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Market).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Market).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(PlatformFeeSpliter).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(PlatformFeeSpliter).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(RebalancePool).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(RebalancePool).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(RebalancePoolRegistry).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(RebalancePoolRegistry).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(RebalancePoolSplitter).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(RebalancePoolSplitter).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(RebalanceWithBonusToken__0).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(RebalanceWithBonusToken__0).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(RebalanceWithBonusToken__1).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(RebalanceWithBonusToken__1).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(RebalanceWithBonusToken__2).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(RebalanceWithBonusToken__2).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(ReservePool).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(ReservePool).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(SmartWalletWhitelist).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(SmartWalletWhitelist).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(StETHAndxETHWrapper).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(StETHAndxETHWrapper).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(stETHTreasury).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(stETHTreasury).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Token_Minter).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Token_Minter).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Voting_Escrow).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Voting_Escrow).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(WstETH).0: '0.140 # {unit:ether,precision:3}'
          - pendingRewards(WstETH).1: '1.201 # {unit:ether,precision:3}'
          - pendingRewards(wstETHWrapper).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(wstETHWrapper).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(xHolderRedeemer).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(xHolderRedeemer).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(xMinter).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(xMinter).1: '0.0 # {unit:ether,precision:3}'
      - periodLength: uint40
        readings:
          - periodLength: '604800'
      - rewardData.finishAt: uint40
        rewardData.lastUpdate: uint40
        rewardData.queued: uint96
        rewardData.rate: uint80
        readings:
          - rewardData($0x11E91BB6d1334585AA37D8F4fde3932C7960B938).finishAt: '0'
          - rewardData($0x11E91BB6d1334585AA37D8F4fde3932C7960B938).lastUpdate: '0'
          - rewardData($0x11E91BB6d1334585AA37D8F4fde3932C7960B938).queued: '0'
          - rewardData($0x11E91BB6d1334585AA37D8F4fde3932C7960B938).rate: '0'
          - rewardData(admin).finishAt: '0'
          - rewardData(admin).lastUpdate: '0'
          - rewardData(admin).queued: '0'
          - rewardData(admin).rate: '0'
          - rewardData(BoostableRebalancePool__1).finishAt: '0'
          - rewardData(BoostableRebalancePool__1).lastUpdate: '0'
          - rewardData(BoostableRebalancePool__1).queued: '0'
          - rewardData(BoostableRebalancePool__1).rate: '0'
          - rewardData(Booster).finishAt: '0'
          - rewardData(Booster).lastUpdate: '0'
          - rewardData(Booster).queued: '0'
          - rewardData(Booster).rate: '0'
          - rewardData(Curve_DAO_Token).finishAt: '0'
          - rewardData(Curve_DAO_Token).lastUpdate: '1707654215'
          - rewardData(Curve_DAO_Token).queued: '0'
          - rewardData(Curve_DAO_Token).rate: '0'
          - rewardData(fHolderLiquidator).finishAt: '0'
          - rewardData(fHolderLiquidator).lastUpdate: '0'
          - rewardData(fHolderLiquidator).queued: '0'
          - rewardData(fHolderLiquidator).rate: '0'
          - rewardData(fHolderRedeemer).finishAt: '0'
          - rewardData(fHolderRedeemer).lastUpdate: '0'
          - rewardData(fHolderRedeemer).queued: '0'
          - rewardData(fHolderRedeemer).rate: '0'
          - rewardData(fMinter).finishAt: '0'
          - rewardData(fMinter).lastUpdate: '0'
          - rewardData(fMinter).queued: '0'
          - rewardData(fMinter).rate: '0'
          - rewardData(FractionalToken).finishAt: '0'
          - rewardData(FractionalToken).lastUpdate: '0'
          - rewardData(FractionalToken).queued: '0'
          - rewardData(FractionalToken).rate: '0'
          - rewardData(FxETHTwapOracle).finishAt: '0'
          - rewardData(FxETHTwapOracle).lastUpdate: '0'
          - rewardData(FxETHTwapOracle).queued: '0'
          - rewardData(FxETHTwapOracle).rate: '0'
          - rewardData(FxnDepositor).finishAt: '0'
          - rewardData(FxnDepositor).lastUpdate: '0'
          - rewardData(FxnDepositor).queued: '0'
          - rewardData(FxnDepositor).rate: '0'
          - rewardData(FxnVoterProxy).finishAt: '0'
          - rewardData(FxnVoterProxy).lastUpdate: '0'
          - rewardData(FxnVoterProxy).queued: '0'
          - rewardData(FxnVoterProxy).rate: '0'
          - rewardData(Gauge_Controller).finishAt: '0'
          - rewardData(Gauge_Controller).lastUpdate: '0'
          - rewardData(Gauge_Controller).queued: '0'
          - rewardData(Gauge_Controller).rate: '0'
          - rewardData(GnosisSafe__0).finishAt: '0'
          - rewardData(GnosisSafe__0).lastUpdate: '0'
          - rewardData(GnosisSafe__0).queued: '0'
          - rewardData(GnosisSafe__0).rate: '0'
          - rewardData(GnosisSafe__1).finishAt: '0'
          - rewardData(GnosisSafe__1).lastUpdate: '0'
          - rewardData(GnosisSafe__1).queued: '0'
          - rewardData(GnosisSafe__1).rate: '0'
          - rewardData(LeveragedToken).finishAt: '0'
          - rewardData(LeveragedToken).lastUpdate: '0'
          - rewardData(LeveragedToken).queued: '0'
          - rewardData(LeveragedToken).rate: '0'
          - rewardData(Lido).finishAt: '0'
          - rewardData(Lido).lastUpdate: '0'
          - rewardData(Lido).queued: '0'
          - rewardData(Lido).rate: '0'
          - rewardData(Market).finishAt: '0'
          - rewardData(Market).lastUpdate: '0'
          - rewardData(Market).queued: '0'
          - rewardData(Market).rate: '0'
          - rewardData(PlatformFeeSpliter).finishAt: '0'
          - rewardData(PlatformFeeSpliter).lastUpdate: '0'
          - rewardData(PlatformFeeSpliter).queued: '0'
          - rewardData(PlatformFeeSpliter).rate: '0'
          - rewardData(RebalancePool).finishAt: '0'
          - rewardData(RebalancePool).lastUpdate: '0'
          - rewardData(RebalancePool).queued: '0'
          - rewardData(RebalancePool).rate: '0'
          - rewardData(RebalancePoolRegistry).finishAt: '0'
          - rewardData(RebalancePoolRegistry).lastUpdate: '0'
          - rewardData(RebalancePoolRegistry).queued: '0'
          - rewardData(RebalancePoolRegistry).rate: '0'
          - rewardData(RebalancePoolSplitter).finishAt: '0'
          - rewardData(RebalancePoolSplitter).lastUpdate: '0'
          - rewardData(RebalancePoolSplitter).queued: '0'
          - rewardData(RebalancePoolSplitter).rate: '0'
          - rewardData(RebalanceWithBonusToken__0).finishAt: '0'
          - rewardData(RebalanceWithBonusToken__0).lastUpdate: '0'
          - rewardData(RebalanceWithBonusToken__0).queued: '0'
          - rewardData(RebalanceWithBonusToken__0).rate: '0'
          - rewardData(RebalanceWithBonusToken__1).finishAt: '0'
          - rewardData(RebalanceWithBonusToken__1).lastUpdate: '0'
          - rewardData(RebalanceWithBonusToken__1).queued: '0'
          - rewardData(RebalanceWithBonusToken__1).rate: '0'
          - rewardData(RebalanceWithBonusToken__2).finishAt: '0'
          - rewardData(RebalanceWithBonusToken__2).lastUpdate: '0'
          - rewardData(RebalanceWithBonusToken__2).queued: '0'
          - rewardData(RebalanceWithBonusToken__2).rate: '0'
          - rewardData(ReservePool).finishAt: '0'
          - rewardData(ReservePool).lastUpdate: '0'
          - rewardData(ReservePool).queued: '0'
          - rewardData(ReservePool).rate: '0'
          - rewardData(SmartWalletWhitelist).finishAt: '0'
          - rewardData(SmartWalletWhitelist).lastUpdate: '0'
          - rewardData(SmartWalletWhitelist).queued: '0'
          - rewardData(SmartWalletWhitelist).rate: '0'
          - rewardData(StETHAndxETHWrapper).finishAt: '0'
          - rewardData(StETHAndxETHWrapper).lastUpdate: '0'
          - rewardData(StETHAndxETHWrapper).queued: '0'
          - rewardData(StETHAndxETHWrapper).rate: '0'
          - rewardData(stETHTreasury).finishAt: '0'
          - rewardData(stETHTreasury).lastUpdate: '0'
          - rewardData(stETHTreasury).queued: '0'
          - rewardData(stETHTreasury).rate: '0'
          - rewardData(Token_Minter).finishAt: '0'
          - rewardData(Token_Minter).lastUpdate: '0'
          - rewardData(Token_Minter).queued: '0'
          - rewardData(Token_Minter).rate: '0'
          - rewardData(Voting_Escrow).finishAt: '0'
          - rewardData(Voting_Escrow).lastUpdate: '0'
          - rewardData(Voting_Escrow).queued: '0'
          - rewardData(Voting_Escrow).rate: '0'
          - rewardData(WstETH).finishAt: '1708259015'
          - rewardData(WstETH).lastUpdate: '1707654215'
          - rewardData(WstETH).queued: '492028'
          - rewardData(WstETH).rate: '2217091562984'
          - rewardData(wstETHWrapper).finishAt: '0'
          - rewardData(wstETHWrapper).lastUpdate: '0'
          - rewardData(wstETHWrapper).queued: '0'
          - rewardData(wstETHWrapper).rate: '0'
          - rewardData(xHolderRedeemer).finishAt: '0'
          - rewardData(xHolderRedeemer).lastUpdate: '0'
          - rewardData(xHolderRedeemer).queued: '0'
          - rewardData(xHolderRedeemer).rate: '0'
          - rewardData(xMinter).finishAt: '0'
          - rewardData(xMinter).lastUpdate: '0'
          - rewardData(xMinter).queued: '0'
          - rewardData(xMinter).rate: '0'
      - rewardReceiver: address
        readings:
          - rewardReceiver($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(admin): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(BoostableRebalancePool__1): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(Booster): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(Curve_DAO_Token): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(fHolderLiquidator): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(fHolderRedeemer): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(fMinter): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(FractionalToken): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(FxETHTwapOracle): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(FxnDepositor): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(FxnVoterProxy): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(Gauge_Controller): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(GnosisSafe__0): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(GnosisSafe__1): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(LeveragedToken): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(Lido): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(Market): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(PlatformFeeSpliter): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(RebalancePool): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(RebalancePoolRegistry): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(RebalancePoolSplitter): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(RebalanceWithBonusToken__0): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(RebalanceWithBonusToken__1): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(RebalanceWithBonusToken__2): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(ReservePool): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(SmartWalletWhitelist): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(StETHAndxETHWrapper): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(stETHTreasury): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(Token_Minter): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(Voting_Escrow): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(WstETH): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(wstETHWrapper): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(xHolderRedeemer): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(xMinter): '0x0000000000000000000000000000000000000000'
      - totalSupply: uint256
        readings:
          - totalSupply: '5688691 # {precision:0,unit:ether}'
      - treasury: address
        readings:
          - treasury: stETHTreasury
      - ve: address
        readings:
          - ve: Voting_Escrow
      - wrapper: address
        readings:
          - wrapper: wstETHWrapper
  - BoostableRebalancePool__1: '0xB87A8332dFb1C76Bb22477dCfEdDeB69865cA9f9'
    contract: BoostableRebalancePool
    functions:
      - asset: address
        readings:
          - asset: FractionalToken
      - balanceOf: uint256
        readings:
          - balanceOf($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0.0 # {unit:ether,precision:2}'
          - balanceOf(admin): '0.0 # {unit:ether,precision:2}'
          - balanceOf(BoostableRebalancePool__0): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Booster): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Curve_DAO_Token): '0.0 # {unit:ether,precision:2}'
          - balanceOf(fHolderLiquidator): '0.0 # {unit:ether,precision:2}'
          - balanceOf(fHolderRedeemer): '0.0 # {unit:ether,precision:2}'
          - balanceOf(fMinter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FractionalToken): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FxETHTwapOracle): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FxnDepositor): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FxnVoterProxy): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Gauge_Controller): '0.0 # {unit:ether,precision:2}'
          - balanceOf(GnosisSafe__0): '0.0 # {unit:ether,precision:2}'
          - balanceOf(GnosisSafe__1): '0.0 # {unit:ether,precision:2}'
          - balanceOf(LeveragedToken): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Lido): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Market): '0.0 # {unit:ether,precision:2}'
          - balanceOf(PlatformFeeSpliter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalancePool): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalancePoolRegistry): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalancePoolSplitter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalanceWithBonusToken__0): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalanceWithBonusToken__1): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalanceWithBonusToken__2): '0.0 # {unit:ether,precision:2}'
          - balanceOf(ReservePool): '0.0 # {unit:ether,precision:2}'
          - balanceOf(SmartWalletWhitelist): '0.0 # {unit:ether,precision:2}'
          - balanceOf(StETHAndxETHWrapper): '0.0 # {unit:ether,precision:2}'
          - balanceOf(stETHTreasury): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Token_Minter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Voting_Escrow): '0.0 # {unit:ether,precision:2}'
          - balanceOf(WstETH): '0.0 # {unit:ether,precision:2}'
          - balanceOf(wstETHWrapper): '0.0 # {unit:ether,precision:2}'
          - balanceOf(xHolderRedeemer): '0.0 # {unit:ether,precision:2}'
          - balanceOf(xMinter): '0.0 # {unit:ether,precision:2}'
      - baseToken: address
        readings:
          - baseToken: Lido
      - boostCheckpoint.historyIndex: uint32
        boostCheckpoint.veBalance: uint112
        boostCheckpoint.veSupply: uint112
        readings:
          - boostCheckpoint($0x11E91BB6d1334585AA37D8F4fde3932C7960B938).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint($0x11E91BB6d1334585AA37D8F4fde3932C7960B938).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint($0x11E91BB6d1334585AA37D8F4fde3932C7960B938).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(admin).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(admin).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(admin).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(BoostableRebalancePool__0).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(BoostableRebalancePool__0).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(BoostableRebalancePool__0).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Booster).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Booster).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Booster).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Curve_DAO_Token).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Curve_DAO_Token).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Curve_DAO_Token).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(fHolderLiquidator).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(fHolderLiquidator).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(fHolderLiquidator).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(fHolderRedeemer).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(fHolderRedeemer).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(fHolderRedeemer).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(fMinter).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(fMinter).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(fMinter).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(FractionalToken).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(FractionalToken).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(FractionalToken).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(FxETHTwapOracle).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(FxETHTwapOracle).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(FxETHTwapOracle).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(FxnDepositor).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(FxnDepositor).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(FxnDepositor).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(FxnVoterProxy).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(FxnVoterProxy).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(FxnVoterProxy).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Gauge_Controller).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Gauge_Controller).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Gauge_Controller).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(GnosisSafe__0).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(GnosisSafe__0).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(GnosisSafe__0).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(GnosisSafe__1).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(GnosisSafe__1).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(GnosisSafe__1).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(LeveragedToken).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(LeveragedToken).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(LeveragedToken).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Lido).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Lido).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Lido).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Market).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Market).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Market).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(PlatformFeeSpliter).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(PlatformFeeSpliter).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(PlatformFeeSpliter).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalancePool).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalancePool).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalancePool).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalancePoolRegistry).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalancePoolRegistry).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalancePoolRegistry).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalancePoolSplitter).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalancePoolSplitter).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalancePoolSplitter).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalanceWithBonusToken__0).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalanceWithBonusToken__0).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalanceWithBonusToken__0).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalanceWithBonusToken__1).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalanceWithBonusToken__1).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalanceWithBonusToken__1).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalanceWithBonusToken__2).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalanceWithBonusToken__2).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(RebalanceWithBonusToken__2).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(ReservePool).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(ReservePool).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(ReservePool).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(SmartWalletWhitelist).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(SmartWalletWhitelist).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(SmartWalletWhitelist).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(StETHAndxETHWrapper).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(StETHAndxETHWrapper).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(StETHAndxETHWrapper).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(stETHTreasury).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(stETHTreasury).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(stETHTreasury).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Token_Minter).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Token_Minter).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Token_Minter).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Voting_Escrow).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Voting_Escrow).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(Voting_Escrow).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(WstETH).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(WstETH).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(WstETH).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(wstETHWrapper).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(wstETHWrapper).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(wstETHWrapper).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(xHolderRedeemer).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(xHolderRedeemer).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(xHolderRedeemer).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(xMinter).historyIndex: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(xMinter).veBalance: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
          - boostCheckpoint(xMinter).veSupply: >-
              could not decode result data
              (value="0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
              info={ "method": "boostCheckpoint", "signature":
              "boostCheckpoint(address)" }, code=BAD_DATA, version=6.9.0)
      - distributors: address
        readings:
          - distributors($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0x0000000000000000000000000000000000000000'
          - distributors(admin): '0x0000000000000000000000000000000000000000'
          - distributors(BoostableRebalancePool__0): '0x0000000000000000000000000000000000000000'
          - distributors(Booster): '0x0000000000000000000000000000000000000000'
          - distributors(Curve_DAO_Token): RebalancePoolSplitter
          - distributors(fHolderLiquidator): '0x0000000000000000000000000000000000000000'
          - distributors(fHolderRedeemer): '0x0000000000000000000000000000000000000000'
          - distributors(fMinter): '0x0000000000000000000000000000000000000000'
          - distributors(FractionalToken): '0x0000000000000000000000000000000000000000'
          - distributors(FxETHTwapOracle): '0x0000000000000000000000000000000000000000'
          - distributors(FxnDepositor): '0x0000000000000000000000000000000000000000'
          - distributors(FxnVoterProxy): '0x0000000000000000000000000000000000000000'
          - distributors(Gauge_Controller): '0x0000000000000000000000000000000000000000'
          - distributors(GnosisSafe__0): '0x0000000000000000000000000000000000000000'
          - distributors(GnosisSafe__1): '0x0000000000000000000000000000000000000000'
          - distributors(LeveragedToken): BoostableRebalancePool__1
          - distributors(Lido): '0x0000000000000000000000000000000000000000'
          - distributors(Market): '0x0000000000000000000000000000000000000000'
          - distributors(PlatformFeeSpliter): '0x0000000000000000000000000000000000000000'
          - distributors(RebalancePool): '0x0000000000000000000000000000000000000000'
          - distributors(RebalancePoolRegistry): '0x0000000000000000000000000000000000000000'
          - distributors(RebalancePoolSplitter): '0x0000000000000000000000000000000000000000'
          - distributors(RebalanceWithBonusToken__0): '0x0000000000000000000000000000000000000000'
          - distributors(RebalanceWithBonusToken__1): '0x0000000000000000000000000000000000000000'
          - distributors(RebalanceWithBonusToken__2): '0x0000000000000000000000000000000000000000'
          - distributors(ReservePool): '0x0000000000000000000000000000000000000000'
          - distributors(SmartWalletWhitelist): '0x0000000000000000000000000000000000000000'
          - distributors(StETHAndxETHWrapper): '0x0000000000000000000000000000000000000000'
          - distributors(stETHTreasury): '0x0000000000000000000000000000000000000000'
          - distributors(Token_Minter): '0x0000000000000000000000000000000000000000'
          - distributors(Voting_Escrow): '0x0000000000000000000000000000000000000000'
          - distributors(WstETH): RebalancePoolSplitter
          - distributors(wstETHWrapper): '0x0000000000000000000000000000000000000000'
          - distributors(xHolderRedeemer): '0x0000000000000000000000000000000000000000'
          - distributors(xMinter): '0x0000000000000000000000000000000000000000'
      - fxn: address
        readings:
          - fxn: Curve_DAO_Token
      - gauge.claimAt: uint64
        gauge.gauge: address
        readings:
          - gauge.claimAt: '0'
          - gauge.gauge: '0x0000000000000000000000000000000000000000'
      - getActiveRewardTokens: address[]
        readings:
          - getActiveRewardTokens:
              - WstETH
              - LeveragedToken
              - Curve_DAO_Token
      - getBoostRatio: uint256
        readings:
          - getBoostRatio($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0.0 # {unit:ether}'
          - getBoostRatio(admin): '0.0 # {unit:ether}'
          - getBoostRatio(BoostableRebalancePool__0): '0.0 # {unit:ether}'
          - getBoostRatio(Booster): '0.0 # {unit:ether}'
          - getBoostRatio(Curve_DAO_Token): '0.0 # {unit:ether}'
          - getBoostRatio(fHolderLiquidator): '0.0 # {unit:ether}'
          - getBoostRatio(fHolderRedeemer): '0.0 # {unit:ether}'
          - getBoostRatio(fMinter): '0.0 # {unit:ether}'
          - getBoostRatio(FractionalToken): '0.0 # {unit:ether}'
          - getBoostRatio(FxETHTwapOracle): '0.0 # {unit:ether}'
          - getBoostRatio(FxnDepositor): '0.0 # {unit:ether}'
          - getBoostRatio(FxnVoterProxy): '0.0 # {unit:ether}'
          - getBoostRatio(Gauge_Controller): '0.0 # {unit:ether}'
          - getBoostRatio(GnosisSafe__0): '0.0 # {unit:ether}'
          - getBoostRatio(GnosisSafe__1): '0.0 # {unit:ether}'
          - getBoostRatio(LeveragedToken): '0.0 # {unit:ether}'
          - getBoostRatio(Lido): '0.0 # {unit:ether}'
          - getBoostRatio(Market): '0.0 # {unit:ether}'
          - getBoostRatio(PlatformFeeSpliter): '0.0 # {unit:ether}'
          - getBoostRatio(RebalancePool): '0.0 # {unit:ether}'
          - getBoostRatio(RebalancePoolRegistry): '0.0 # {unit:ether}'
          - getBoostRatio(RebalancePoolSplitter): '0.0 # {unit:ether}'
          - getBoostRatio(RebalanceWithBonusToken__0): '0.0 # {unit:ether}'
          - getBoostRatio(RebalanceWithBonusToken__1): '0.0 # {unit:ether}'
          - getBoostRatio(RebalanceWithBonusToken__2): '0.0 # {unit:ether}'
          - getBoostRatio(ReservePool): '0.0 # {unit:ether}'
          - getBoostRatio(SmartWalletWhitelist): '0.0 # {unit:ether}'
          - getBoostRatio(StETHAndxETHWrapper): '0.0 # {unit:ether}'
          - getBoostRatio(stETHTreasury): '0.0 # {unit:ether}'
          - getBoostRatio(Token_Minter): '0.0 # {unit:ether}'
          - getBoostRatio(Voting_Escrow): '0.0 # {unit:ether}'
          - getBoostRatio(WstETH): '0.0 # {unit:ether}'
          - getBoostRatio(wstETHWrapper): '0.0 # {unit:ether}'
          - getBoostRatio(xHolderRedeemer): '0.0 # {unit:ether}'
          - getBoostRatio(xMinter): '0.0 # {unit:ether}'
      - getHistoricalRewardTokens: address[]
        readings:
          - getHistoricalRewardTokens: []
      - lastAssetLossError: uint256
        readings:
          - lastAssetLossError: '0.0 # {unit:ether}'
      - liquidatableCollateralRatio: uint256
        readings:
          - liquidatableCollateralRatio: '1.3055 # {unit:ether}'
      - market: address
        readings:
          - market: Market
      - minter: address
        readings:
          - minter: Token_Minter
      - numTotalSupplyHistory: uint256
        readings:
          - numTotalSupplyHistory: '149 # {}'
      - pendingRewards.0: uint256
        pendingRewards.1: uint256
        readings:
          - pendingRewards($0x11E91BB6d1334585AA37D8F4fde3932C7960B938).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards($0x11E91BB6d1334585AA37D8F4fde3932C7960B938).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(admin).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(admin).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(BoostableRebalancePool__0).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(BoostableRebalancePool__0).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Booster).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Booster).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Curve_DAO_Token).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Curve_DAO_Token).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(fHolderLiquidator).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(fHolderLiquidator).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(fHolderRedeemer).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(fHolderRedeemer).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(fMinter).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(fMinter).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(FractionalToken).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(FractionalToken).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(FxETHTwapOracle).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(FxETHTwapOracle).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(FxnDepositor).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(FxnDepositor).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(FxnVoterProxy).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(FxnVoterProxy).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Gauge_Controller).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Gauge_Controller).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(GnosisSafe__0).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(GnosisSafe__0).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(GnosisSafe__1).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(GnosisSafe__1).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(LeveragedToken).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(LeveragedToken).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Lido).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Lido).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Market).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Market).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(PlatformFeeSpliter).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(PlatformFeeSpliter).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(RebalancePool).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(RebalancePool).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(RebalancePoolRegistry).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(RebalancePoolRegistry).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(RebalancePoolSplitter).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(RebalancePoolSplitter).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(RebalanceWithBonusToken__0).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(RebalanceWithBonusToken__0).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(RebalanceWithBonusToken__1).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(RebalanceWithBonusToken__1).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(RebalanceWithBonusToken__2).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(RebalanceWithBonusToken__2).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(ReservePool).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(ReservePool).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(SmartWalletWhitelist).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(SmartWalletWhitelist).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(StETHAndxETHWrapper).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(StETHAndxETHWrapper).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(stETHTreasury).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(stETHTreasury).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Token_Minter).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Token_Minter).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Voting_Escrow).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(Voting_Escrow).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(WstETH).0: '0.140 # {unit:ether,precision:3}'
          - pendingRewards(WstETH).1: '1.201 # {unit:ether,precision:3}'
          - pendingRewards(wstETHWrapper).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(wstETHWrapper).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(xHolderRedeemer).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(xHolderRedeemer).1: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(xMinter).0: '0.0 # {unit:ether,precision:3}'
          - pendingRewards(xMinter).1: '0.0 # {unit:ether,precision:3}'
      - periodLength: uint40
        readings:
          - periodLength: '604800'
      - rewardData.finishAt: uint40
        rewardData.lastUpdate: uint40
        rewardData.queued: uint96
        rewardData.rate: uint80
        readings:
          - rewardData($0x11E91BB6d1334585AA37D8F4fde3932C7960B938).finishAt: '0'
          - rewardData($0x11E91BB6d1334585AA37D8F4fde3932C7960B938).lastUpdate: '0'
          - rewardData($0x11E91BB6d1334585AA37D8F4fde3932C7960B938).queued: '0'
          - rewardData($0x11E91BB6d1334585AA37D8F4fde3932C7960B938).rate: '0'
          - rewardData(admin).finishAt: '0'
          - rewardData(admin).lastUpdate: '0'
          - rewardData(admin).queued: '0'
          - rewardData(admin).rate: '0'
          - rewardData(BoostableRebalancePool__0).finishAt: '0'
          - rewardData(BoostableRebalancePool__0).lastUpdate: '0'
          - rewardData(BoostableRebalancePool__0).queued: '0'
          - rewardData(BoostableRebalancePool__0).rate: '0'
          - rewardData(Booster).finishAt: '0'
          - rewardData(Booster).lastUpdate: '0'
          - rewardData(Booster).queued: '0'
          - rewardData(Booster).rate: '0'
          - rewardData(Curve_DAO_Token).finishAt: '0'
          - rewardData(Curve_DAO_Token).lastUpdate: '1707654215'
          - rewardData(Curve_DAO_Token).queued: '0'
          - rewardData(Curve_DAO_Token).rate: '0'
          - rewardData(fHolderLiquidator).finishAt: '0'
          - rewardData(fHolderLiquidator).lastUpdate: '0'
          - rewardData(fHolderLiquidator).queued: '0'
          - rewardData(fHolderLiquidator).rate: '0'
          - rewardData(fHolderRedeemer).finishAt: '0'
          - rewardData(fHolderRedeemer).lastUpdate: '0'
          - rewardData(fHolderRedeemer).queued: '0'
          - rewardData(fHolderRedeemer).rate: '0'
          - rewardData(fMinter).finishAt: '0'
          - rewardData(fMinter).lastUpdate: '0'
          - rewardData(fMinter).queued: '0'
          - rewardData(fMinter).rate: '0'
          - rewardData(FractionalToken).finishAt: '0'
          - rewardData(FractionalToken).lastUpdate: '0'
          - rewardData(FractionalToken).queued: '0'
          - rewardData(FractionalToken).rate: '0'
          - rewardData(FxETHTwapOracle).finishAt: '0'
          - rewardData(FxETHTwapOracle).lastUpdate: '0'
          - rewardData(FxETHTwapOracle).queued: '0'
          - rewardData(FxETHTwapOracle).rate: '0'
          - rewardData(FxnDepositor).finishAt: '0'
          - rewardData(FxnDepositor).lastUpdate: '0'
          - rewardData(FxnDepositor).queued: '0'
          - rewardData(FxnDepositor).rate: '0'
          - rewardData(FxnVoterProxy).finishAt: '0'
          - rewardData(FxnVoterProxy).lastUpdate: '0'
          - rewardData(FxnVoterProxy).queued: '0'
          - rewardData(FxnVoterProxy).rate: '0'
          - rewardData(Gauge_Controller).finishAt: '0'
          - rewardData(Gauge_Controller).lastUpdate: '0'
          - rewardData(Gauge_Controller).queued: '0'
          - rewardData(Gauge_Controller).rate: '0'
          - rewardData(GnosisSafe__0).finishAt: '0'
          - rewardData(GnosisSafe__0).lastUpdate: '0'
          - rewardData(GnosisSafe__0).queued: '0'
          - rewardData(GnosisSafe__0).rate: '0'
          - rewardData(GnosisSafe__1).finishAt: '0'
          - rewardData(GnosisSafe__1).lastUpdate: '0'
          - rewardData(GnosisSafe__1).queued: '0'
          - rewardData(GnosisSafe__1).rate: '0'
          - rewardData(LeveragedToken).finishAt: '0'
          - rewardData(LeveragedToken).lastUpdate: '1707654215'
          - rewardData(LeveragedToken).queued: '0'
          - rewardData(LeveragedToken).rate: '0'
          - rewardData(Lido).finishAt: '0'
          - rewardData(Lido).lastUpdate: '0'
          - rewardData(Lido).queued: '0'
          - rewardData(Lido).rate: '0'
          - rewardData(Market).finishAt: '0'
          - rewardData(Market).lastUpdate: '0'
          - rewardData(Market).queued: '0'
          - rewardData(Market).rate: '0'
          - rewardData(PlatformFeeSpliter).finishAt: '0'
          - rewardData(PlatformFeeSpliter).lastUpdate: '0'
          - rewardData(PlatformFeeSpliter).queued: '0'
          - rewardData(PlatformFeeSpliter).rate: '0'
          - rewardData(RebalancePool).finishAt: '0'
          - rewardData(RebalancePool).lastUpdate: '0'
          - rewardData(RebalancePool).queued: '0'
          - rewardData(RebalancePool).rate: '0'
          - rewardData(RebalancePoolRegistry).finishAt: '0'
          - rewardData(RebalancePoolRegistry).lastUpdate: '0'
          - rewardData(RebalancePoolRegistry).queued: '0'
          - rewardData(RebalancePoolRegistry).rate: '0'
          - rewardData(RebalancePoolSplitter).finishAt: '0'
          - rewardData(RebalancePoolSplitter).lastUpdate: '0'
          - rewardData(RebalancePoolSplitter).queued: '0'
          - rewardData(RebalancePoolSplitter).rate: '0'
          - rewardData(RebalanceWithBonusToken__0).finishAt: '0'
          - rewardData(RebalanceWithBonusToken__0).lastUpdate: '0'
          - rewardData(RebalanceWithBonusToken__0).queued: '0'
          - rewardData(RebalanceWithBonusToken__0).rate: '0'
          - rewardData(RebalanceWithBonusToken__1).finishAt: '0'
          - rewardData(RebalanceWithBonusToken__1).lastUpdate: '0'
          - rewardData(RebalanceWithBonusToken__1).queued: '0'
          - rewardData(RebalanceWithBonusToken__1).rate: '0'
          - rewardData(RebalanceWithBonusToken__2).finishAt: '0'
          - rewardData(RebalanceWithBonusToken__2).lastUpdate: '0'
          - rewardData(RebalanceWithBonusToken__2).queued: '0'
          - rewardData(RebalanceWithBonusToken__2).rate: '0'
          - rewardData(ReservePool).finishAt: '0'
          - rewardData(ReservePool).lastUpdate: '0'
          - rewardData(ReservePool).queued: '0'
          - rewardData(ReservePool).rate: '0'
          - rewardData(SmartWalletWhitelist).finishAt: '0'
          - rewardData(SmartWalletWhitelist).lastUpdate: '0'
          - rewardData(SmartWalletWhitelist).queued: '0'
          - rewardData(SmartWalletWhitelist).rate: '0'
          - rewardData(StETHAndxETHWrapper).finishAt: '0'
          - rewardData(StETHAndxETHWrapper).lastUpdate: '0'
          - rewardData(StETHAndxETHWrapper).queued: '0'
          - rewardData(StETHAndxETHWrapper).rate: '0'
          - rewardData(stETHTreasury).finishAt: '0'
          - rewardData(stETHTreasury).lastUpdate: '0'
          - rewardData(stETHTreasury).queued: '0'
          - rewardData(stETHTreasury).rate: '0'
          - rewardData(Token_Minter).finishAt: '0'
          - rewardData(Token_Minter).lastUpdate: '0'
          - rewardData(Token_Minter).queued: '0'
          - rewardData(Token_Minter).rate: '0'
          - rewardData(Voting_Escrow).finishAt: '0'
          - rewardData(Voting_Escrow).lastUpdate: '0'
          - rewardData(Voting_Escrow).queued: '0'
          - rewardData(Voting_Escrow).rate: '0'
          - rewardData(WstETH).finishAt: '1708259015'
          - rewardData(WstETH).lastUpdate: '1707654215'
          - rewardData(WstETH).queued: '492028'
          - rewardData(WstETH).rate: '2217091562984'
          - rewardData(wstETHWrapper).finishAt: '0'
          - rewardData(wstETHWrapper).lastUpdate: '0'
          - rewardData(wstETHWrapper).queued: '0'
          - rewardData(wstETHWrapper).rate: '0'
          - rewardData(xHolderRedeemer).finishAt: '0'
          - rewardData(xHolderRedeemer).lastUpdate: '0'
          - rewardData(xHolderRedeemer).queued: '0'
          - rewardData(xHolderRedeemer).rate: '0'
          - rewardData(xMinter).finishAt: '0'
          - rewardData(xMinter).lastUpdate: '0'
          - rewardData(xMinter).queued: '0'
          - rewardData(xMinter).rate: '0'
      - rewardReceiver: address
        readings:
          - rewardReceiver($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(admin): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(BoostableRebalancePool__0): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(Booster): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(Curve_DAO_Token): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(fHolderLiquidator): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(fHolderRedeemer): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(fMinter): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(FractionalToken): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(FxETHTwapOracle): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(FxnDepositor): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(FxnVoterProxy): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(Gauge_Controller): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(GnosisSafe__0): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(GnosisSafe__1): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(LeveragedToken): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(Lido): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(Market): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(PlatformFeeSpliter): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(RebalancePool): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(RebalancePoolRegistry): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(RebalancePoolSplitter): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(RebalanceWithBonusToken__0): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(RebalanceWithBonusToken__1): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(RebalanceWithBonusToken__2): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(ReservePool): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(SmartWalletWhitelist): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(StETHAndxETHWrapper): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(stETHTreasury): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(Token_Minter): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(Voting_Escrow): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(WstETH): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(wstETHWrapper): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(xHolderRedeemer): '0x0000000000000000000000000000000000000000'
          - rewardReceiver(xMinter): '0x0000000000000000000000000000000000000000'
      - totalSupply: uint256
        readings:
          - totalSupply: '5769148 # {precision:0,unit:ether}'
      - treasury: address
        readings:
          - treasury: stETHTreasury
      - ve: address
        readings:
          - ve: Voting_Escrow
      - wrapper: address
        readings:
          - wrapper: StETHAndxETHWrapper
  - Booster: '0x91e575C0CC6E8BC530d897d3d425B57B49A821C6'
    contract: Booster
    functions:
      - cvxfxn: address
        readings:
          - cvxfxn: '0x183395DbD0B5e93323a7286D1973150697FFFCB3'
      - feeclaimer: address
        readings:
          - feeclaimer: '0x0000000000000000000000000000000000000000'
      - feeDistro: address
        readings:
          - feeDistro: '0xd116513EEa4Efe3908212AfBAeFC76cb29245681'
      - feeQueue: address
        readings:
          - feeQueue: '0x30575fDCFb2b76096047F0a8651b52159aB835f7'
      - feeToken: address
        readings:
          - feeToken: WstETH
      - fxn: address
        readings:
          - fxn: Curve_DAO_Token
      - fxnDepositor: address
        readings:
          - fxnDepositor: FxnDepositor
      - owner: address
        readings:
          - owner: GnosisSafe__1
      - pendingOwner: address
        readings:
          - pendingOwner: '0x0000000000000000000000000000000000000000'
      - proxy: address
        readings:
          - proxy: FxnVoterProxy
      - rewardManager: address
        readings:
          - rewardManager: '0xe7Ac460137CCD6173DB6992529013D672d4F0087'
  - Curve_DAO_Token: '0x365AccFCa291e7D3914637ABf1F7635dB165Bb09'
    contract: Curve DAO Token
    functions:
      - admin: address
        readings:
          - admin: GnosisSafe__0
      - available_supply: uint256
        readings:
          - available_supply: '1059378 # {precision:0,unit:ether}'
      - balanceOf: uint256
        readings:
          - balanceOf($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0.0 # {unit:ether,precision:2}'
          - balanceOf(admin): '0.0 # {unit:ether,precision:2}'
          - balanceOf(BoostableRebalancePool__0): '20.0 # {unit:ether,precision:2}'
          - balanceOf(BoostableRebalancePool__1): '20.0 # {unit:ether,precision:2}'
          - balanceOf(Booster): '0.0 # {unit:ether,precision:2}'
          - balanceOf(fHolderLiquidator): '0.0 # {unit:ether,precision:2}'
          - balanceOf(fHolderRedeemer): '0.0 # {unit:ether,precision:2}'
          - balanceOf(fMinter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FractionalToken): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FxETHTwapOracle): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FxnDepositor): '1397.71 # {unit:ether,precision:2}'
          - balanceOf(FxnVoterProxy): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Gauge_Controller): '0.0 # {unit:ether,precision:2}'
          - balanceOf(GnosisSafe__0): '7119.92 # {unit:ether,precision:2}'
          - balanceOf(GnosisSafe__1): '0.0 # {unit:ether,precision:2}'
          - balanceOf(LeveragedToken): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Lido): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Market): '0.0 # {unit:ether,precision:2}'
          - balanceOf(PlatformFeeSpliter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalancePool): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalancePoolRegistry): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalancePoolSplitter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalanceWithBonusToken__0): '100.0 # {unit:ether,precision:2}'
          - balanceOf(RebalanceWithBonusToken__1): '20.0 # {unit:ether,precision:2}'
          - balanceOf(RebalanceWithBonusToken__2): '20.0 # {unit:ether,precision:2}'
          - balanceOf(ReservePool): '0.0 # {unit:ether,precision:2}'
          - balanceOf(SmartWalletWhitelist): '0.0 # {unit:ether,precision:2}'
          - balanceOf(StETHAndxETHWrapper): '0.0 # {unit:ether,precision:2}'
          - balanceOf(stETHTreasury): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Token_Minter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Voting_Escrow): '119837.44 # {unit:ether,precision:2}'
          - balanceOf(WstETH): '0.0 # {unit:ether,precision:2}'
          - balanceOf(wstETHWrapper): '0.0 # {unit:ether,precision:2}'
          - balanceOf(xHolderRedeemer): '0.0 # {unit:ether,precision:2}'
          - balanceOf(xMinter): '0.0 # {unit:ether,precision:2}'
      - decimals: uint256
        readings:
          - decimals: '18 # {}'
      - INITIAL_RATE: uint256
        readings:
          - INITIAL_RATE: '0.003107559614408929 # {unit:ether}'
      - mining_epoch: int128
        readings:
          - mining_epoch: '0'
      - minter: address
        readings:
          - minter: Token_Minter
      - rate: uint256
        readings:
          - rate: '0.003107559614408929 # {unit:ether}'
      - RATE_REDUCTION_COEFFICIENT: uint256
        readings:
          - RATE_REDUCTION_COEFFICIENT: '1.111111111111111111 # {unit:ether}'
      - start_epoch_time: uint256
        readings:
          - start_epoch_time: '1695045779 # {}'
      - totalSupply: uint256
        readings:
          - totalSupply: '1020000 # {precision:0,unit:ether}'
  - FractionalToken: '0x53805A76E1f5ebbFE7115F16f9c87C2f7e633726'
    contract: FractionalToken
    functions:
      - balanceOf: uint256
        readings:
          - balanceOf($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '16.49 # {unit:ether,precision:2}'
          - balanceOf(admin): '0.0 # {unit:ether,precision:2}'
          - balanceOf(BoostableRebalancePool__0): '5688690.99 # {unit:ether,precision:2}'
          - balanceOf(BoostableRebalancePool__1): '5769148.34 # {unit:ether,precision:2}'
          - balanceOf(Booster): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Curve_DAO_Token): '0.0 # {unit:ether,precision:2}'
          - balanceOf(fHolderLiquidator): '0.0 # {unit:ether,precision:2}'
          - balanceOf(fHolderRedeemer): '0.0 # {unit:ether,precision:2}'
          - balanceOf(fMinter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FxETHTwapOracle): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FxnDepositor): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FxnVoterProxy): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Gauge_Controller): '0.0 # {unit:ether,precision:2}'
          - balanceOf(GnosisSafe__0): '9802.39 # {unit:ether,precision:2}'
          - balanceOf(GnosisSafe__1): '0.0 # {unit:ether,precision:2}'
          - balanceOf(LeveragedToken): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Lido): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Market): '0.0 # {unit:ether,precision:2}'
          - balanceOf(PlatformFeeSpliter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalancePool): '33956.49 # {unit:ether,precision:2}'
          - balanceOf(RebalancePoolRegistry): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalancePoolSplitter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalanceWithBonusToken__0): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalanceWithBonusToken__1): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalanceWithBonusToken__2): '0.0 # {unit:ether,precision:2}'
          - balanceOf(ReservePool): '0.0 # {unit:ether,precision:2}'
          - balanceOf(SmartWalletWhitelist): '0.0 # {unit:ether,precision:2}'
          - balanceOf(StETHAndxETHWrapper): '0.0 # {unit:ether,precision:2}'
          - balanceOf(stETHTreasury): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Token_Minter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Voting_Escrow): '0.0 # {unit:ether,precision:2}'
          - balanceOf(WstETH): '0.0 # {unit:ether,precision:2}'
          - balanceOf(wstETHWrapper): '0.0 # {unit:ether,precision:2}'
          - balanceOf(xHolderRedeemer): '0.0 # {unit:ether,precision:2}'
          - balanceOf(xMinter): '0.0 # {unit:ether,precision:2}'
      - decimals: uint8
        readings:
          - decimals: '18 # {}'
      - nav: uint256
        readings:
          - nav: '1.0 # {unit:ether}'
      - totalSupply: uint256
        readings:
          - totalSupply: '12136955 # {precision:0,unit:ether}'
      - treasury: address
        readings:
          - treasury: stETHTreasury
  - FxETHTwapOracle: '0xa84360896cE9152d1780c546305BB54125F962d9'
    contract: FxETHTwapOracle
    functions:
      - chainlinkETHTwapOracle: address
        readings:
          - chainlinkETHTwapOracle: '0x460B3CdE57DfbA90DBed02fd83d3990a92DA1230'
      - chainlinkStETHTwapOracle: address
        readings:
          - chainlinkStETHTwapOracle: '0xD24AC180e6769Fd5F624e7605B93084171074A77'
      - curvePool: address
        readings:
          - curvePool: '0x21E27a5E5513D6e65C4f830167390997aA84843a'
      - getPrice._maxUnsafePrice: uint256
        getPrice._minUnsafePrice: uint256
        getPrice._safePrice: uint256
        readings:
          - getPrice._maxUnsafePrice: '2500.9 # {unit:ether,precision:1}'
          - getPrice._minUnsafePrice: '2495.1 # {unit:ether,precision:1}'
          - getPrice._safePrice: '2500.9 # {unit:ether,precision:1}'
  - FxnDepositor: '0x56B3c8eF8A095f8637B6A84942aA898326B82b91'
    contract: FxnDepositor
    functions:
      - DENOMINATOR: uint256
        readings:
          - DENOMINATOR: '0.00000000000001 # {unit:ether}'
      - escrow: address
        readings:
          - escrow: Voting_Escrow
      - fxn: address
        readings:
          - fxn: Curve_DAO_Token
      - minter: address
        readings:
          - minter: '0x183395DbD0B5e93323a7286D1973150697FFFCB3'
      - owner: address
        readings:
          - owner: '0xe7Ac460137CCD6173DB6992529013D672d4F0087'
      - pendingOwner: address
        readings:
          - pendingOwner: '0x0000000000000000000000000000000000000000'
      - platformDeposit: address
        readings:
          - platformDeposit: '0x1389388d01708118b497f59521f6943Be2541bb7'
      - platformHolding: uint256
        readings:
          - platformHolding: '0.000000000000002 # {unit:ether}'
      - staker: address
        readings:
          - staker: FxnVoterProxy
      - unlockTime: uint256
        readings:
          - unlockTime: '0.0000000018319392 # {unit:ether}'
  - FxnVoterProxy: '0xd11a4Ee017cA0BECA8FA45fF2abFe9C6267b7881'
    contract: FxnVoterProxy
    functions:
      - depositor: address
        readings:
          - depositor: FxnDepositor
      - escrow: address
        readings:
          - escrow: Voting_Escrow
      - fxn: address
        readings:
          - fxn: Curve_DAO_Token
      - operator: address
        readings:
          - operator: Booster
      - owner: address
        readings:
          - owner: GnosisSafe__1
      - pendingOwner: address
        readings:
          - pendingOwner: '0x0000000000000000000000000000000000000000'
  - Gauge_Controller: '0xe60eB8098B34eD775ac44B1ddE864e098C6d7f37'
    contract: Gauge Controller
    functions:
      - admin: address
        readings:
          - admin: GnosisSafe__0
      - future_admin: address
        readings:
          - future_admin: '0x0000000000000000000000000000000000000000'
      - gauge_relative_weight: uint256
        readings:
          - gauge_relative_weight($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0.0 # {unit:ether}'
          - gauge_relative_weight(admin): '0.0 # {unit:ether}'
          - gauge_relative_weight(BoostableRebalancePool__0): '0.0 # {unit:ether}'
          - gauge_relative_weight(BoostableRebalancePool__1): '0.0 # {unit:ether}'
          - gauge_relative_weight(Booster): '0.0 # {unit:ether}'
          - gauge_relative_weight(Curve_DAO_Token): '0.0 # {unit:ether}'
          - gauge_relative_weight(fHolderLiquidator): '0.0 # {unit:ether}'
          - gauge_relative_weight(fHolderRedeemer): '0.0 # {unit:ether}'
          - gauge_relative_weight(fMinter): '0.0 # {unit:ether}'
          - gauge_relative_weight(FractionalToken): '0.0 # {unit:ether}'
          - gauge_relative_weight(FxETHTwapOracle): '0.0 # {unit:ether}'
          - gauge_relative_weight(FxnDepositor): '0.0 # {unit:ether}'
          - gauge_relative_weight(FxnVoterProxy): '0.0 # {unit:ether}'
          - gauge_relative_weight(GnosisSafe__0): '0.0 # {unit:ether}'
          - gauge_relative_weight(GnosisSafe__1): '0.0 # {unit:ether}'
          - gauge_relative_weight(LeveragedToken): '0.0 # {unit:ether}'
          - gauge_relative_weight(Lido): '0.0 # {unit:ether}'
          - gauge_relative_weight(Market): '0.0 # {unit:ether}'
          - gauge_relative_weight(PlatformFeeSpliter): '0.0 # {unit:ether}'
          - gauge_relative_weight(RebalancePool): '0.0 # {unit:ether}'
          - gauge_relative_weight(RebalancePoolRegistry): '0.0 # {unit:ether}'
          - gauge_relative_weight(RebalancePoolSplitter): '0.0 # {unit:ether}'
          - gauge_relative_weight(RebalanceWithBonusToken__0): '0.0 # {unit:ether}'
          - gauge_relative_weight(RebalanceWithBonusToken__1): '0.0 # {unit:ether}'
          - gauge_relative_weight(RebalanceWithBonusToken__2): '0.0 # {unit:ether}'
          - gauge_relative_weight(ReservePool): '0.0 # {unit:ether}'
          - gauge_relative_weight(SmartWalletWhitelist): '0.0 # {unit:ether}'
          - gauge_relative_weight(StETHAndxETHWrapper): '0.0 # {unit:ether}'
          - gauge_relative_weight(stETHTreasury): '0.0 # {unit:ether}'
          - gauge_relative_weight(Token_Minter): '0.0 # {unit:ether}'
          - gauge_relative_weight(Voting_Escrow): '0.0 # {unit:ether}'
          - gauge_relative_weight(WstETH): '0.0 # {unit:ether}'
          - gauge_relative_weight(wstETHWrapper): '0.0 # {unit:ether}'
          - gauge_relative_weight(xHolderRedeemer): '0.0 # {unit:ether}'
          - gauge_relative_weight(xMinter): '0.0 # {unit:ether}'
      - gauge_types: int128
        readings:
          - gauge_types($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): Transaction reverted without a reason string
          - gauge_types(admin): Transaction reverted without a reason string
          - gauge_types(BoostableRebalancePool__0): Transaction reverted without a reason string
          - gauge_types(BoostableRebalancePool__1): Transaction reverted without a reason string
          - gauge_types(Booster): Transaction reverted without a reason string
          - gauge_types(Curve_DAO_Token): Transaction reverted without a reason string
          - gauge_types(fHolderLiquidator): Transaction reverted without a reason string
          - gauge_types(fHolderRedeemer): Transaction reverted without a reason string
          - gauge_types(fMinter): Transaction reverted without a reason string
          - gauge_types(FractionalToken): Transaction reverted without a reason string
          - gauge_types(FxETHTwapOracle): Transaction reverted without a reason string
          - gauge_types(FxnDepositor): Transaction reverted without a reason string
          - gauge_types(FxnVoterProxy): Transaction reverted without a reason string
          - gauge_types(GnosisSafe__0): Transaction reverted without a reason string
          - gauge_types(GnosisSafe__1): Transaction reverted without a reason string
          - gauge_types(LeveragedToken): Transaction reverted without a reason string
          - gauge_types(Lido): Transaction reverted without a reason string
          - gauge_types(Market): Transaction reverted without a reason string
          - gauge_types(PlatformFeeSpliter): Transaction reverted without a reason string
          - gauge_types(RebalancePool): Transaction reverted without a reason string
          - gauge_types(RebalancePoolRegistry): Transaction reverted without a reason string
          - gauge_types(RebalancePoolSplitter): Transaction reverted without a reason string
          - gauge_types(RebalanceWithBonusToken__0): Transaction reverted without a reason string
          - gauge_types(RebalanceWithBonusToken__1): Transaction reverted without a reason string
          - gauge_types(RebalanceWithBonusToken__2): Transaction reverted without a reason string
          - gauge_types(ReservePool): Transaction reverted without a reason string
          - gauge_types(SmartWalletWhitelist): Transaction reverted without a reason string
          - gauge_types(StETHAndxETHWrapper): Transaction reverted without a reason string
          - gauge_types(stETHTreasury): Transaction reverted without a reason string
          - gauge_types(Token_Minter): Transaction reverted without a reason string
          - gauge_types(Voting_Escrow): Transaction reverted without a reason string
          - gauge_types(WstETH): Transaction reverted without a reason string
          - gauge_types(wstETHWrapper): Transaction reverted without a reason string
          - gauge_types(xHolderRedeemer): Transaction reverted without a reason string
          - gauge_types(xMinter): Transaction reverted without a reason string
      - get_gauge_weight: uint256
        readings:
          - get_gauge_weight($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0.0 # {unit:ether}'
          - get_gauge_weight(admin): '0.0 # {unit:ether}'
          - get_gauge_weight(BoostableRebalancePool__0): '0.0 # {unit:ether}'
          - get_gauge_weight(BoostableRebalancePool__1): '0.0 # {unit:ether}'
          - get_gauge_weight(Booster): '0.0 # {unit:ether}'
          - get_gauge_weight(Curve_DAO_Token): '0.0 # {unit:ether}'
          - get_gauge_weight(fHolderLiquidator): '0.0 # {unit:ether}'
          - get_gauge_weight(fHolderRedeemer): '0.0 # {unit:ether}'
          - get_gauge_weight(fMinter): '0.0 # {unit:ether}'
          - get_gauge_weight(FractionalToken): '0.0 # {unit:ether}'
          - get_gauge_weight(FxETHTwapOracle): '0.0 # {unit:ether}'
          - get_gauge_weight(FxnDepositor): '0.0 # {unit:ether}'
          - get_gauge_weight(FxnVoterProxy): '0.0 # {unit:ether}'
          - get_gauge_weight(GnosisSafe__0): '0.0 # {unit:ether}'
          - get_gauge_weight(GnosisSafe__1): '0.0 # {unit:ether}'
          - get_gauge_weight(LeveragedToken): '0.0 # {unit:ether}'
          - get_gauge_weight(Lido): '0.0 # {unit:ether}'
          - get_gauge_weight(Market): '0.0 # {unit:ether}'
          - get_gauge_weight(PlatformFeeSpliter): '0.0 # {unit:ether}'
          - get_gauge_weight(RebalancePool): '0.0 # {unit:ether}'
          - get_gauge_weight(RebalancePoolRegistry): '0.0 # {unit:ether}'
          - get_gauge_weight(RebalancePoolSplitter): '0.0 # {unit:ether}'
          - get_gauge_weight(RebalanceWithBonusToken__0): '0.0 # {unit:ether}'
          - get_gauge_weight(RebalanceWithBonusToken__1): '0.0 # {unit:ether}'
          - get_gauge_weight(RebalanceWithBonusToken__2): '0.0 # {unit:ether}'
          - get_gauge_weight(ReservePool): '0.0 # {unit:ether}'
          - get_gauge_weight(SmartWalletWhitelist): '0.0 # {unit:ether}'
          - get_gauge_weight(StETHAndxETHWrapper): '0.0 # {unit:ether}'
          - get_gauge_weight(stETHTreasury): '0.0 # {unit:ether}'
          - get_gauge_weight(Token_Minter): '0.0 # {unit:ether}'
          - get_gauge_weight(Voting_Escrow): '0.0 # {unit:ether}'
          - get_gauge_weight(WstETH): '0.0 # {unit:ether}'
          - get_gauge_weight(wstETHWrapper): '0.0 # {unit:ether}'
          - get_gauge_weight(xHolderRedeemer): '0.0 # {unit:ether}'
          - get_gauge_weight(xMinter): '0.0 # {unit:ether}'
      - get_total_weight: uint256
        readings:
          - get_total_weight: '0.0 # {unit:ether}'
      - n_gauge_types: int128
        readings:
          - n_gauge_types: '0'
      - n_gauges: int128
        readings:
          - n_gauges: '0'
      - time_total: uint256
        readings:
          - time_total: '1694649600 # {}'
      - time_weight: uint256
        readings:
          - time_weight($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0.0 # {unit:ether}'
          - time_weight(admin): '0.0 # {unit:ether}'
          - time_weight(BoostableRebalancePool__0): '0.0 # {unit:ether}'
          - time_weight(BoostableRebalancePool__1): '0.0 # {unit:ether}'
          - time_weight(Booster): '0.0 # {unit:ether}'
          - time_weight(Curve_DAO_Token): '0.0 # {unit:ether}'
          - time_weight(fHolderLiquidator): '0.0 # {unit:ether}'
          - time_weight(fHolderRedeemer): '0.0 # {unit:ether}'
          - time_weight(fMinter): '0.0 # {unit:ether}'
          - time_weight(FractionalToken): '0.0 # {unit:ether}'
          - time_weight(FxETHTwapOracle): '0.0 # {unit:ether}'
          - time_weight(FxnDepositor): '0.0 # {unit:ether}'
          - time_weight(FxnVoterProxy): '0.0 # {unit:ether}'
          - time_weight(GnosisSafe__0): '0.0 # {unit:ether}'
          - time_weight(GnosisSafe__1): '0.0 # {unit:ether}'
          - time_weight(LeveragedToken): '0.0 # {unit:ether}'
          - time_weight(Lido): '0.0 # {unit:ether}'
          - time_weight(Market): '0.0 # {unit:ether}'
          - time_weight(PlatformFeeSpliter): '0.0 # {unit:ether}'
          - time_weight(RebalancePool): '0.0 # {unit:ether}'
          - time_weight(RebalancePoolRegistry): '0.0 # {unit:ether}'
          - time_weight(RebalancePoolSplitter): '0.0 # {unit:ether}'
          - time_weight(RebalanceWithBonusToken__0): '0.0 # {unit:ether}'
          - time_weight(RebalanceWithBonusToken__1): '0.0 # {unit:ether}'
          - time_weight(RebalanceWithBonusToken__2): '0.0 # {unit:ether}'
          - time_weight(ReservePool): '0.0 # {unit:ether}'
          - time_weight(SmartWalletWhitelist): '0.0 # {unit:ether}'
          - time_weight(StETHAndxETHWrapper): '0.0 # {unit:ether}'
          - time_weight(stETHTreasury): '0.0 # {unit:ether}'
          - time_weight(Token_Minter): '0.0 # {unit:ether}'
          - time_weight(Voting_Escrow): '0.0 # {unit:ether}'
          - time_weight(WstETH): '0.0 # {unit:ether}'
          - time_weight(wstETHWrapper): '0.0 # {unit:ether}'
          - time_weight(xHolderRedeemer): '0.0 # {unit:ether}'
          - time_weight(xMinter): '0.0 # {unit:ether}'
      - token: address
        readings:
          - token: Curve_DAO_Token
      - vote_user_power: uint256
        readings:
          - vote_user_power($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0.0 # {unit:ether}'
          - vote_user_power(admin): '0.0 # {unit:ether}'
          - vote_user_power(BoostableRebalancePool__0): '0.0 # {unit:ether}'
          - vote_user_power(BoostableRebalancePool__1): '0.0 # {unit:ether}'
          - vote_user_power(Booster): '0.0 # {unit:ether}'
          - vote_user_power(Curve_DAO_Token): '0.0 # {unit:ether}'
          - vote_user_power(fHolderLiquidator): '0.0 # {unit:ether}'
          - vote_user_power(fHolderRedeemer): '0.0 # {unit:ether}'
          - vote_user_power(fMinter): '0.0 # {unit:ether}'
          - vote_user_power(FractionalToken): '0.0 # {unit:ether}'
          - vote_user_power(FxETHTwapOracle): '0.0 # {unit:ether}'
          - vote_user_power(FxnDepositor): '0.0 # {unit:ether}'
          - vote_user_power(FxnVoterProxy): '0.0 # {unit:ether}'
          - vote_user_power(GnosisSafe__0): '0.0 # {unit:ether}'
          - vote_user_power(GnosisSafe__1): '0.0 # {unit:ether}'
          - vote_user_power(LeveragedToken): '0.0 # {unit:ether}'
          - vote_user_power(Lido): '0.0 # {unit:ether}'
          - vote_user_power(Market): '0.0 # {unit:ether}'
          - vote_user_power(PlatformFeeSpliter): '0.0 # {unit:ether}'
          - vote_user_power(RebalancePool): '0.0 # {unit:ether}'
          - vote_user_power(RebalancePoolRegistry): '0.0 # {unit:ether}'
          - vote_user_power(RebalancePoolSplitter): '0.0 # {unit:ether}'
          - vote_user_power(RebalanceWithBonusToken__0): '0.0 # {unit:ether}'
          - vote_user_power(RebalanceWithBonusToken__1): '0.0 # {unit:ether}'
          - vote_user_power(RebalanceWithBonusToken__2): '0.0 # {unit:ether}'
          - vote_user_power(ReservePool): '0.0 # {unit:ether}'
          - vote_user_power(SmartWalletWhitelist): '0.0 # {unit:ether}'
          - vote_user_power(StETHAndxETHWrapper): '0.0 # {unit:ether}'
          - vote_user_power(stETHTreasury): '0.0 # {unit:ether}'
          - vote_user_power(Token_Minter): '0.0 # {unit:ether}'
          - vote_user_power(Voting_Escrow): '0.0 # {unit:ether}'
          - vote_user_power(WstETH): '0.0 # {unit:ether}'
          - vote_user_power(wstETHWrapper): '0.0 # {unit:ether}'
          - vote_user_power(xHolderRedeemer): '0.0 # {unit:ether}'
          - vote_user_power(xMinter): '0.0 # {unit:ether}'
      - voting_escrow: address
        readings:
          - voting_escrow: Voting_Escrow
  - GnosisSafe__0: '0x26B2ec4E02ebe2F54583af25b647b1D619e67BbF'
    contract: GnosisSafe
    functions:
      - getChainId: uint256
        readings:
          - getChainId: '31337 # {}'
      - getOwners: address[]
        readings:
          - getOwners:
              - '0x38a93e70b0D8343657f802C1c3Fdb06aC8F8fe99'
              - '0xF483De0f306952FA56ef56c1dbBDd2A70737bDd5'
              - '0xe3522d85d37F55735e9327CD7a5cDe3abaf28E03'
              - '0x74390470F4001Ca85D93bD546A4Ab1724359654B'
              - '0xeF0Ca09fbf9a5f61E657Fb208b46b8685c1d4766'
              - '0x8EcAB7B8ed8215cA52500cbf1548B9239173ef82'
              - '0x4088421cBDBa1501d8Fd09fD241717097Afb42Cb'
              - '0xcdF067F306E7a511Ef701588AFCdcff292B19282'
              - '0x7904Ad7c992CDAb500dAa0f3366301b1f5365B62'
      - getThreshold: uint256
        readings:
          - getThreshold: '6 # {}'
      - nonce: uint256
        readings:
          - nonce: '58 # {}'
  - GnosisSafe__1: '0xa3C5A1e09150B75ff251c1a7815A07182c3de2FB'
    contract: GnosisSafe
    functions:
      - getModules: address[]
        readings:
          - getModules: []
      - getOwners: address[]
        readings:
          - getOwners:
              - '0x49e5097f627e400F2a377D5FD7E712d1E0e16FC2'
              - '0x17e06ce6914E3969f7BD37D8b2a563890cA1c96e'
              - '0xAdE9e51C9E23d64E538A7A38656B78aB6Bcc349e'
              - '0xAAc0aa431c237C2C0B5f041c8e59B3f1a43aC78F'
              - '0x7904Ad7c992CDAb500dAa0f3366301b1f5365B62'
      - getThreshold: uint256
        readings:
          - getThreshold: '3 # {}'
      - nonce: uint256
        readings:
          - nonce: '1007 # {}'
  - LeveragedToken: '0xe063F04f280c60aECa68b38341C2eEcBeC703ae2'
    contract: LeveragedToken
    functions:
      - balanceOf: uint256
        readings:
          - balanceOf($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '21.99 # {unit:ether,precision:2}'
          - balanceOf(admin): '0.0 # {unit:ether,precision:2}'
          - balanceOf(BoostableRebalancePool__0): '0.0 # {unit:ether,precision:2}'
          - balanceOf(BoostableRebalancePool__1): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Booster): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Curve_DAO_Token): '0.0 # {unit:ether,precision:2}'
          - balanceOf(fHolderLiquidator): '0.0 # {unit:ether,precision:2}'
          - balanceOf(fHolderRedeemer): '0.0 # {unit:ether,precision:2}'
          - balanceOf(fMinter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FractionalToken): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FxETHTwapOracle): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FxnDepositor): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FxnVoterProxy): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Gauge_Controller): '0.0 # {unit:ether,precision:2}'
          - balanceOf(GnosisSafe__0): '217352.17 # {unit:ether,precision:2}'
          - balanceOf(GnosisSafe__1): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Lido): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Market): '0.0 # {unit:ether,precision:2}'
          - balanceOf(PlatformFeeSpliter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalancePool): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalancePoolRegistry): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalancePoolSplitter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalanceWithBonusToken__0): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalanceWithBonusToken__1): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalanceWithBonusToken__2): '0.0 # {unit:ether,precision:2}'
          - balanceOf(ReservePool): '0.0 # {unit:ether,precision:2}'
          - balanceOf(SmartWalletWhitelist): '0.0 # {unit:ether,precision:2}'
          - balanceOf(StETHAndxETHWrapper): '0.0 # {unit:ether,precision:2}'
          - balanceOf(stETHTreasury): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Token_Minter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Voting_Escrow): '0.0 # {unit:ether,precision:2}'
          - balanceOf(WstETH): '0.0 # {unit:ether,precision:2}'
          - balanceOf(wstETHWrapper): '0.0 # {unit:ether,precision:2}'
          - balanceOf(xHolderRedeemer): '0.0 # {unit:ether,precision:2}'
          - balanceOf(xMinter): '0.0 # {unit:ether,precision:2}'
      - decimals: uint8
        readings:
          - decimals: '18 # {}'
      - fToken: address
        readings:
          - fToken: FractionalToken
      - nav: uint256
        readings:
          - nav: '0.723751949545094451 # {unit:ether}'
      - totalSupply: uint256
        readings:
          - totalSupply: '7200159 # {precision:0,unit:ether}'
      - treasury: address
        readings:
          - treasury: stETHTreasury
  - Lido: '0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84'
    contract: Lido
    functions:
      - balanceOf: uint256
        readings:
          - balanceOf($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0.08 # {unit:ether,precision:2}'
          - balanceOf(admin): '0.0 # {unit:ether,precision:2}'
          - balanceOf(BoostableRebalancePool__0): '0.0 # {unit:ether,precision:2}'
          - balanceOf(BoostableRebalancePool__1): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Booster): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Curve_DAO_Token): '0.0 # {unit:ether,precision:2}'
          - balanceOf(fHolderLiquidator): '0.0 # {unit:ether,precision:2}'
          - balanceOf(fHolderRedeemer): '0.0 # {unit:ether,precision:2}'
          - balanceOf(fMinter): '10000.00 # {unit:ether,precision:2}'
          - balanceOf(FractionalToken): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FxETHTwapOracle): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FxnDepositor): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FxnVoterProxy): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Gauge_Controller): '0.0 # {unit:ether,precision:2}'
          - balanceOf(GnosisSafe__0): '0.12 # {unit:ether,precision:2}'
          - balanceOf(GnosisSafe__1): '0.0 # {unit:ether,precision:2}'
          - balanceOf(LeveragedToken): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Market): '0.00 # {unit:ether,precision:2}'
          - balanceOf(PlatformFeeSpliter): '5.20 # {unit:ether,precision:2}'
          - balanceOf(RebalancePool): '2.84 # {unit:ether,precision:2}'
          - balanceOf(RebalancePoolRegistry): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalancePoolSplitter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalanceWithBonusToken__0): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalanceWithBonusToken__1): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalanceWithBonusToken__2): '0.0 # {unit:ether,precision:2}'
          - balanceOf(ReservePool): '33.53 # {unit:ether,precision:2}'
          - balanceOf(SmartWalletWhitelist): '0.0 # {unit:ether,precision:2}'
          - balanceOf(StETHAndxETHWrapper): '0.0 # {unit:ether,precision:2}'
          - balanceOf(stETHTreasury): '9444.81 # {unit:ether,precision:2}'
          - balanceOf(Token_Minter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Voting_Escrow): '0.0 # {unit:ether,precision:2}'
          - balanceOf(WstETH): '3548193.50 # {unit:ether,precision:2}'
          - balanceOf(wstETHWrapper): '0.0 # {unit:ether,precision:2}'
          - balanceOf(xHolderRedeemer): '0.0 # {unit:ether,precision:2}'
          - balanceOf(xMinter): '0.0 # {unit:ether,precision:2}'
      - decimals: uint8
        readings:
          - decimals: '18 # {}'
      - eip712Domain.chainId: uint256
        eip712Domain.verifyingContract: address
        readings:
          - eip712Domain.chainId: '0.000000000000031337 # {unit:ether}'
          - eip712Domain.verifyingContract: Lido
      - getBeaconStat.beaconBalance: uint256
        getBeaconStat.beaconValidators: uint256
        getBeaconStat.depositedValidators: uint256
        readings:
          - getBeaconStat.beaconBalance: '9609517.707248935 # {unit:ether}'
          - getBeaconStat.beaconValidators: '0.00000000000032914 # {unit:ether}'
          - getBeaconStat.depositedValidators: '0.000000000000329449 # {unit:ether}'
      - getBufferedEther: uint256
        readings:
          - getBufferedEther: '5317.034030923591218678 # {unit:ether}'
      - getContractVersion: uint256
        readings:
          - getContractVersion: '0.000000000000000002 # {unit:ether}'
      - getCurrentStakeLimit: uint256
        readings:
          - getCurrentStakeLimit: '150000.0 # {unit:ether}'
      - getDepositableEther: uint256
        readings:
          - getDepositableEther: '0.0 # {unit:ether}'
      - getEIP712StETH: address
        readings:
          - getEIP712StETH: '0x8F73e4C2A6D852bb4ab2A45E6a9CF5715b3228B7'
      - getEVMScriptRegistry: address
        readings:
          - getEVMScriptRegistry: '0x853cc0D5917f49B57B8e9F89e491F5E18919093A'
      - getFee: uint16
        readings:
          - getFee: '1000'
      - getFeeDistribution.insuranceFeeBasisPoints: uint16
        getFeeDistribution.operatorsFeeBasisPoints: uint16
        getFeeDistribution.treasuryFeeBasisPoints: uint16
        readings:
          - getFeeDistribution.insuranceFeeBasisPoints: '0'
          - getFeeDistribution.operatorsFeeBasisPoints: '5000'
          - getFeeDistribution.treasuryFeeBasisPoints: '5000'
      - getInitializationBlock: uint256
        readings:
          - getInitializationBlock: '0.000000000011473216 # {unit:ether}'
      - getLidoLocator: address
        readings:
          - getLidoLocator: '0xC1d0b3DE6792Bf6b4b37EccdcC24e45978Cfd2Eb'
      - getOracle: address
        readings:
          - getOracle: '0x442af784A788A5bd6F42A01Ebe9F287a871243fb'
      - getRecoveryVault: address
        readings:
          - getRecoveryVault: '0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c'
      - getStakeLimitFullInfo.currentStakeLimit: uint256
        getStakeLimitFullInfo.maxStakeLimit: uint256
        getStakeLimitFullInfo.maxStakeLimitGrowthBlocks: uint256
        getStakeLimitFullInfo.prevStakeBlockNumber: uint256
        getStakeLimitFullInfo.prevStakeLimit: uint256
        readings:
          - getStakeLimitFullInfo.currentStakeLimit: '150000.0 # {unit:ether}'
          - getStakeLimitFullInfo.maxStakeLimit: '150000.0 # {unit:ether}'
          - getStakeLimitFullInfo.maxStakeLimitGrowthBlocks: '0.0000000000000064 # {unit:ether}'
          - getStakeLimitFullInfo.prevStakeBlockNumber: '0.000000000019209999 # {unit:ether}'
          - getStakeLimitFullInfo.prevStakeLimit: '149999.691 # {unit:ether}'
      - getTotalELRewardsCollected: uint256
        readings:
          - getTotalELRewardsCollected: '139179.302573740159056574 # {unit:ether}'
      - getTotalPooledEther: uint256
        readings:
          - getTotalPooledEther: '9624722.741279858591218678 # {unit:ether}'
      - getTotalShares: uint256
        readings:
          - getTotalShares: '8320475.448872065470959815 # {unit:ether}'
      - getTreasury: address
        readings:
          - getTreasury: '0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c'
      - kernel: address
        readings:
          - kernel: '0xb8FFC3Cd6e7Cf5a098A1c92F48009765B24088Dc'
      - nonces: uint256
        readings:
          - nonces($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0 # {}'
          - nonces(admin): '0 # {}'
          - nonces(BoostableRebalancePool__0): '0 # {}'
          - nonces(BoostableRebalancePool__1): '0 # {}'
          - nonces(Booster): '0 # {}'
          - nonces(Curve_DAO_Token): '0 # {}'
          - nonces(fHolderLiquidator): '0 # {}'
          - nonces(fHolderRedeemer): '0 # {}'
          - nonces(fMinter): '0 # {}'
          - nonces(FractionalToken): '0 # {}'
          - nonces(FxETHTwapOracle): '0 # {}'
          - nonces(FxnDepositor): '0 # {}'
          - nonces(FxnVoterProxy): '0 # {}'
          - nonces(Gauge_Controller): '0 # {}'
          - nonces(GnosisSafe__0): '0 # {}'
          - nonces(GnosisSafe__1): '0 # {}'
          - nonces(LeveragedToken): '0 # {}'
          - nonces(Market): '0 # {}'
          - nonces(PlatformFeeSpliter): '0 # {}'
          - nonces(RebalancePool): '0 # {}'
          - nonces(RebalancePoolRegistry): '0 # {}'
          - nonces(RebalancePoolSplitter): '0 # {}'
          - nonces(RebalanceWithBonusToken__0): '0 # {}'
          - nonces(RebalanceWithBonusToken__1): '0 # {}'
          - nonces(RebalanceWithBonusToken__2): '0 # {}'
          - nonces(ReservePool): '0 # {}'
          - nonces(SmartWalletWhitelist): '0 # {}'
          - nonces(StETHAndxETHWrapper): '0 # {}'
          - nonces(stETHTreasury): '0 # {}'
          - nonces(Token_Minter): '0 # {}'
          - nonces(Voting_Escrow): '0 # {}'
          - nonces(WstETH): '0 # {}'
          - nonces(wstETHWrapper): '0 # {}'
          - nonces(xHolderRedeemer): '0 # {}'
          - nonces(xMinter): '0 # {}'
      - sharesOf: uint256
        readings:
          - sharesOf($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0.067576111815704987 # {unit:ether}'
          - sharesOf(admin): '0.0 # {unit:ether}'
          - sharesOf(BoostableRebalancePool__0): '0.0 # {unit:ether}'
          - sharesOf(BoostableRebalancePool__1): '0.0 # {unit:ether}'
          - sharesOf(Booster): '0.0 # {unit:ether}'
          - sharesOf(Curve_DAO_Token): '0.0 # {unit:ether}'
          - sharesOf(fHolderLiquidator): '0.0 # {unit:ether}'
          - sharesOf(fHolderRedeemer): '0.0 # {unit:ether}'
          - sharesOf(fMinter): '8644.89884283735810299 # {unit:ether}'
          - sharesOf(FractionalToken): '0.0 # {unit:ether}'
          - sharesOf(FxETHTwapOracle): '0.0 # {unit:ether}'
          - sharesOf(FxnDepositor): '0.0 # {unit:ether}'
          - sharesOf(FxnVoterProxy): '0.0 # {unit:ether}'
          - sharesOf(Gauge_Controller): '0.0 # {unit:ether}'
          - sharesOf(GnosisSafe__0): '0.103633390821223128 # {unit:ether}'
          - sharesOf(GnosisSafe__1): '0.0 # {unit:ether}'
          - sharesOf(LeveragedToken): '0.0 # {unit:ether}'
          - sharesOf(Market): '0.000000000000000223 # {unit:ether}'
          - sharesOf(PlatformFeeSpliter): '4.49353245346764438 # {unit:ether}'
          - sharesOf(RebalancePool): '2.451394756103965692 # {unit:ether}'
          - sharesOf(RebalancePoolRegistry): '0.0 # {unit:ether}'
          - sharesOf(RebalancePoolSplitter): '0.0 # {unit:ether}'
          - sharesOf(RebalanceWithBonusToken__0): '0.0 # {unit:ether}'
          - sharesOf(RebalanceWithBonusToken__1): '0.0 # {unit:ether}'
          - sharesOf(RebalanceWithBonusToken__2): '0.0 # {unit:ether}'
          - sharesOf(ReservePool): '28.990166673141510048 # {unit:ether}'
          - sharesOf(SmartWalletWhitelist): '0.0 # {unit:ether}'
          - sharesOf(StETHAndxETHWrapper): '0.0 # {unit:ether}'
          - sharesOf(stETHTreasury): '8164.940765030775329617 # {unit:ether}'
          - sharesOf(Token_Minter): '0.0 # {unit:ether}'
          - sharesOf(Voting_Escrow): '0.0 # {unit:ether}'
          - sharesOf(WstETH): '3067377.387249938650363244 # {unit:ether}'
          - sharesOf(wstETHWrapper): '0.0 # {unit:ether}'
          - sharesOf(xHolderRedeemer): '0.0 # {unit:ether}'
          - sharesOf(xMinter): '0.0 # {unit:ether}'
      - totalSupply: uint256
        readings:
          - totalSupply: '9624723 # {precision:0,unit:ether}'
  - Market: '0xe7b9c7c9cA85340b8c06fb805f7775e3015108dB'
    contract: Market
    functions:
      - baseToken: address
        readings:
          - baseToken: Lido
      - fToken: address
        readings:
          - fToken: FractionalToken
      - fTokenMintFeeRatio.defaultFeeRatio: uint128
        fTokenMintFeeRatio.extraFeeRatio: int128
        readings:
          - fTokenMintFeeRatio.defaultFeeRatio: '0.25 # {unit:16}'
          - fTokenMintFeeRatio.extraFeeRatio: '0.0 # {unit:16}'
      - fTokenRedeemFeeRatio.defaultFeeRatio: uint128
        fTokenRedeemFeeRatio.extraFeeRatio: int128
        readings:
          - fTokenRedeemFeeRatio.defaultFeeRatio: '0.25 # {unit:16}'
          - fTokenRedeemFeeRatio.extraFeeRatio: '-0.25 # {unit:16}'
      - incentiveConfig.liquidationIncentiveRatio: uint64
        incentiveConfig.selfLiquidationIncentiveRatio: uint64
        incentiveConfig.stabilityIncentiveRatio: uint64
        readings:
          - incentiveConfig.liquidationIncentiveRatio: '0.0 # {unit:18}'
          - incentiveConfig.selfLiquidationIncentiveRatio: '0.0 # {unit:18}'
          - incentiveConfig.stabilityIncentiveRatio: '0.0 # {unit:18}'
      - marketConfig.liquidationRatio: uint64
        marketConfig.recapRatio: uint64
        marketConfig.selfLiquidationRatio: uint64
        marketConfig.stabilityRatio: uint64
        readings:
          - marketConfig.liquidationRatio: '1.2067 # {unit:18}'
          - marketConfig.recapRatio: '1.0 # {unit:18}'
          - marketConfig.selfLiquidationRatio: '1.1439 # {unit:18}'
          - marketConfig.stabilityRatio: '1.3055 # {unit:18}'
      - platform: address
        readings:
          - platform: PlatformFeeSpliter
      - registry: address
        readings:
          - registry: RebalancePoolRegistry
      - reservePool: address
        readings:
          - reservePool: ReservePool
      - treasury: address
        readings:
          - treasury: stETHTreasury
      - xToken: address
        readings:
          - xToken: LeveragedToken
      - xTokenMintFeeRatio.defaultFeeRatio: uint128
        xTokenMintFeeRatio.extraFeeRatio: int128
        readings:
          - xTokenMintFeeRatio.defaultFeeRatio: '1.0 # {unit:16}'
          - xTokenMintFeeRatio.extraFeeRatio: '-1.0 # {unit:16}'
      - xTokenRedeemFeeRatio.defaultFeeRatio: uint128
        xTokenRedeemFeeRatio.extraFeeRatio: int128
        readings:
          - xTokenRedeemFeeRatio.defaultFeeRatio: '1.0 # {unit:16}'
          - xTokenRedeemFeeRatio.extraFeeRatio: '7.0 # {unit:16}'
  - PlatformFeeSpliter: '0x0084C2e1B1823564e597Ff4848a88D61ac63D703'
    contract: PlatformFeeSpliter
    functions:
      - burners: address
        readings:
          - burners($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0x0000000000000000000000000000000000000000'
          - burners(admin): '0x0000000000000000000000000000000000000000'
          - burners(BoostableRebalancePool__0): '0x0000000000000000000000000000000000000000'
          - burners(BoostableRebalancePool__1): '0x0000000000000000000000000000000000000000'
          - burners(Booster): '0x0000000000000000000000000000000000000000'
          - burners(Curve_DAO_Token): '0x0000000000000000000000000000000000000000'
          - burners(fHolderLiquidator): '0x0000000000000000000000000000000000000000'
          - burners(fHolderRedeemer): '0x0000000000000000000000000000000000000000'
          - burners(fMinter): '0x0000000000000000000000000000000000000000'
          - burners(FractionalToken): '0x0000000000000000000000000000000000000000'
          - burners(FxETHTwapOracle): '0x0000000000000000000000000000000000000000'
          - burners(FxnDepositor): '0x0000000000000000000000000000000000000000'
          - burners(FxnVoterProxy): '0x0000000000000000000000000000000000000000'
          - burners(Gauge_Controller): '0x0000000000000000000000000000000000000000'
          - burners(GnosisSafe__0): '0x0000000000000000000000000000000000000000'
          - burners(GnosisSafe__1): '0x0000000000000000000000000000000000000000'
          - burners(LeveragedToken): '0x0000000000000000000000000000000000000000'
          - burners(Lido): '0x6440e21A3634C319c69CEf8d17601DBC4E97C3dB'
          - burners(Market): '0x0000000000000000000000000000000000000000'
          - burners(RebalancePool): '0x0000000000000000000000000000000000000000'
          - burners(RebalancePoolRegistry): '0x0000000000000000000000000000000000000000'
          - burners(RebalancePoolSplitter): '0x0000000000000000000000000000000000000000'
          - burners(RebalanceWithBonusToken__0): '0x0000000000000000000000000000000000000000'
          - burners(RebalanceWithBonusToken__1): '0x0000000000000000000000000000000000000000'
          - burners(RebalanceWithBonusToken__2): '0x0000000000000000000000000000000000000000'
          - burners(ReservePool): '0x0000000000000000000000000000000000000000'
          - burners(SmartWalletWhitelist): '0x0000000000000000000000000000000000000000'
          - burners(StETHAndxETHWrapper): '0x0000000000000000000000000000000000000000'
          - burners(stETHTreasury): '0x0000000000000000000000000000000000000000'
          - burners(Token_Minter): '0x0000000000000000000000000000000000000000'
          - burners(Voting_Escrow): '0x0000000000000000000000000000000000000000'
          - burners(WstETH): '0x0000000000000000000000000000000000000000'
          - burners(wstETHWrapper): '0x0000000000000000000000000000000000000000'
          - burners(xHolderRedeemer): '0x0000000000000000000000000000000000000000'
          - burners(xMinter): '0x0000000000000000000000000000000000000000'
      - ecosystem: address
        readings:
          - ecosystem: GnosisSafe__0
      - getRewardCount: uint256
        readings:
          - getRewardCount: '1 # {}'
      - owner: address
        readings:
          - owner: GnosisSafe__0
      - staker: address
        readings:
          - staker: $0x11E91BB6d1334585AA37D8F4fde3932C7960B938
      - treasury: address
        readings:
          - treasury: ReservePool
  - RebalancePool: '0xa677d95B91530d56791FbA72C01a862f1B01A49e'
    contract: RebalancePool
    functions:
      - asset: address
        readings:
          - asset: FractionalToken
      - balanceOf: uint256
        readings:
          - balanceOf($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0.0 # {unit:ether,precision:2}'
          - balanceOf(admin): '0.0 # {unit:ether,precision:2}'
          - balanceOf(BoostableRebalancePool__0): '0.0 # {unit:ether,precision:2}'
          - balanceOf(BoostableRebalancePool__1): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Booster): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Curve_DAO_Token): '0.0 # {unit:ether,precision:2}'
          - balanceOf(fHolderLiquidator): '0.0 # {unit:ether,precision:2}'
          - balanceOf(fHolderRedeemer): '0.0 # {unit:ether,precision:2}'
          - balanceOf(fMinter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FractionalToken): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FxETHTwapOracle): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FxnDepositor): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FxnVoterProxy): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Gauge_Controller): '0.0 # {unit:ether,precision:2}'
          - balanceOf(GnosisSafe__0): '0.0 # {unit:ether,precision:2}'
          - balanceOf(GnosisSafe__1): '0.0 # {unit:ether,precision:2}'
          - balanceOf(LeveragedToken): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Lido): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Market): '0.0 # {unit:ether,precision:2}'
          - balanceOf(PlatformFeeSpliter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalancePoolRegistry): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalancePoolSplitter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalanceWithBonusToken__0): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalanceWithBonusToken__1): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalanceWithBonusToken__2): '0.0 # {unit:ether,precision:2}'
          - balanceOf(ReservePool): '0.0 # {unit:ether,precision:2}'
          - balanceOf(SmartWalletWhitelist): '0.0 # {unit:ether,precision:2}'
          - balanceOf(StETHAndxETHWrapper): '0.0 # {unit:ether,precision:2}'
          - balanceOf(stETHTreasury): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Token_Minter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Voting_Escrow): '0.0 # {unit:ether,precision:2}'
          - balanceOf(WstETH): '0.0 # {unit:ether,precision:2}'
          - balanceOf(wstETHWrapper): '0.0 # {unit:ether,precision:2}'
          - balanceOf(xHolderRedeemer): '0.0 # {unit:ether,precision:2}'
          - balanceOf(xMinter): '0.0 # {unit:ether,precision:2}'
      - baseRewardToken: address
        readings:
          - baseRewardToken: WstETH
      - baseToken: address
        readings:
          - baseToken: Lido
      - epochState.epoch: uint64
        epochState.prod: uint128
        epochState.scale: uint64
        readings:
          - epochState.epoch: '0'
          - epochState.prod: '1000000000000000000'
          - epochState.scale: '0'
      - extraRewardsLength: uint256
        readings:
          - extraRewardsLength: '0.000000000000000001 # {unit:ether}'
      - extraRewardState.finishAt: uint48
        extraRewardState.lastUpdate: uint48
        extraRewardState.periodLength: uint32
        extraRewardState.queued: uint256
        extraRewardState.rate: uint128
        readings:
          - extraRewardState($0x11E91BB6d1334585AA37D8F4fde3932C7960B938).finishAt: '0'
          - extraRewardState($0x11E91BB6d1334585AA37D8F4fde3932C7960B938).lastUpdate: '0'
          - extraRewardState($0x11E91BB6d1334585AA37D8F4fde3932C7960B938).periodLength: '0'
          - extraRewardState($0x11E91BB6d1334585AA37D8F4fde3932C7960B938).queued: '0.0 # {unit:ether}'
          - extraRewardState($0x11E91BB6d1334585AA37D8F4fde3932C7960B938).rate: '0'
          - extraRewardState(admin).finishAt: '0'
          - extraRewardState(admin).lastUpdate: '0'
          - extraRewardState(admin).periodLength: '0'
          - extraRewardState(admin).queued: '0.0 # {unit:ether}'
          - extraRewardState(admin).rate: '0'
          - extraRewardState(BoostableRebalancePool__0).finishAt: '0'
          - extraRewardState(BoostableRebalancePool__0).lastUpdate: '0'
          - extraRewardState(BoostableRebalancePool__0).periodLength: '0'
          - extraRewardState(BoostableRebalancePool__0).queued: '0.0 # {unit:ether}'
          - extraRewardState(BoostableRebalancePool__0).rate: '0'
          - extraRewardState(BoostableRebalancePool__1).finishAt: '0'
          - extraRewardState(BoostableRebalancePool__1).lastUpdate: '0'
          - extraRewardState(BoostableRebalancePool__1).periodLength: '0'
          - extraRewardState(BoostableRebalancePool__1).queued: '0.0 # {unit:ether}'
          - extraRewardState(BoostableRebalancePool__1).rate: '0'
          - extraRewardState(Booster).finishAt: '0'
          - extraRewardState(Booster).lastUpdate: '0'
          - extraRewardState(Booster).periodLength: '0'
          - extraRewardState(Booster).queued: '0.0 # {unit:ether}'
          - extraRewardState(Booster).rate: '0'
          - extraRewardState(Curve_DAO_Token).finishAt: '0'
          - extraRewardState(Curve_DAO_Token).lastUpdate: '0'
          - extraRewardState(Curve_DAO_Token).periodLength: '0'
          - extraRewardState(Curve_DAO_Token).queued: '0.0 # {unit:ether}'
          - extraRewardState(Curve_DAO_Token).rate: '0'
          - extraRewardState(fHolderLiquidator).finishAt: '0'
          - extraRewardState(fHolderLiquidator).lastUpdate: '0'
          - extraRewardState(fHolderLiquidator).periodLength: '0'
          - extraRewardState(fHolderLiquidator).queued: '0.0 # {unit:ether}'
          - extraRewardState(fHolderLiquidator).rate: '0'
          - extraRewardState(fHolderRedeemer).finishAt: '0'
          - extraRewardState(fHolderRedeemer).lastUpdate: '0'
          - extraRewardState(fHolderRedeemer).periodLength: '0'
          - extraRewardState(fHolderRedeemer).queued: '0.0 # {unit:ether}'
          - extraRewardState(fHolderRedeemer).rate: '0'
          - extraRewardState(fMinter).finishAt: '0'
          - extraRewardState(fMinter).lastUpdate: '0'
          - extraRewardState(fMinter).periodLength: '0'
          - extraRewardState(fMinter).queued: '0.0 # {unit:ether}'
          - extraRewardState(fMinter).rate: '0'
          - extraRewardState(FractionalToken).finishAt: '0'
          - extraRewardState(FractionalToken).lastUpdate: '0'
          - extraRewardState(FractionalToken).periodLength: '0'
          - extraRewardState(FractionalToken).queued: '0.0 # {unit:ether}'
          - extraRewardState(FractionalToken).rate: '0'
          - extraRewardState(FxETHTwapOracle).finishAt: '0'
          - extraRewardState(FxETHTwapOracle).lastUpdate: '0'
          - extraRewardState(FxETHTwapOracle).periodLength: '0'
          - extraRewardState(FxETHTwapOracle).queued: '0.0 # {unit:ether}'
          - extraRewardState(FxETHTwapOracle).rate: '0'
          - extraRewardState(FxnDepositor).finishAt: '0'
          - extraRewardState(FxnDepositor).lastUpdate: '0'
          - extraRewardState(FxnDepositor).periodLength: '0'
          - extraRewardState(FxnDepositor).queued: '0.0 # {unit:ether}'
          - extraRewardState(FxnDepositor).rate: '0'
          - extraRewardState(FxnVoterProxy).finishAt: '0'
          - extraRewardState(FxnVoterProxy).lastUpdate: '0'
          - extraRewardState(FxnVoterProxy).periodLength: '0'
          - extraRewardState(FxnVoterProxy).queued: '0.0 # {unit:ether}'
          - extraRewardState(FxnVoterProxy).rate: '0'
          - extraRewardState(Gauge_Controller).finishAt: '0'
          - extraRewardState(Gauge_Controller).lastUpdate: '0'
          - extraRewardState(Gauge_Controller).periodLength: '0'
          - extraRewardState(Gauge_Controller).queued: '0.0 # {unit:ether}'
          - extraRewardState(Gauge_Controller).rate: '0'
          - extraRewardState(GnosisSafe__0).finishAt: '0'
          - extraRewardState(GnosisSafe__0).lastUpdate: '0'
          - extraRewardState(GnosisSafe__0).periodLength: '0'
          - extraRewardState(GnosisSafe__0).queued: '0.0 # {unit:ether}'
          - extraRewardState(GnosisSafe__0).rate: '0'
          - extraRewardState(GnosisSafe__1).finishAt: '0'
          - extraRewardState(GnosisSafe__1).lastUpdate: '0'
          - extraRewardState(GnosisSafe__1).periodLength: '0'
          - extraRewardState(GnosisSafe__1).queued: '0.0 # {unit:ether}'
          - extraRewardState(GnosisSafe__1).rate: '0'
          - extraRewardState(LeveragedToken).finishAt: '0'
          - extraRewardState(LeveragedToken).lastUpdate: '0'
          - extraRewardState(LeveragedToken).periodLength: '0'
          - extraRewardState(LeveragedToken).queued: '0.0 # {unit:ether}'
          - extraRewardState(LeveragedToken).rate: '0'
          - extraRewardState(Lido).finishAt: '0'
          - extraRewardState(Lido).lastUpdate: '0'
          - extraRewardState(Lido).periodLength: '0'
          - extraRewardState(Lido).queued: '0.0 # {unit:ether}'
          - extraRewardState(Lido).rate: '0'
          - extraRewardState(Market).finishAt: '0'
          - extraRewardState(Market).lastUpdate: '0'
          - extraRewardState(Market).periodLength: '0'
          - extraRewardState(Market).queued: '0.0 # {unit:ether}'
          - extraRewardState(Market).rate: '0'
          - extraRewardState(PlatformFeeSpliter).finishAt: '0'
          - extraRewardState(PlatformFeeSpliter).lastUpdate: '0'
          - extraRewardState(PlatformFeeSpliter).periodLength: '0'
          - extraRewardState(PlatformFeeSpliter).queued: '0.0 # {unit:ether}'
          - extraRewardState(PlatformFeeSpliter).rate: '0'
          - extraRewardState(RebalancePoolRegistry).finishAt: '0'
          - extraRewardState(RebalancePoolRegistry).lastUpdate: '0'
          - extraRewardState(RebalancePoolRegistry).periodLength: '0'
          - extraRewardState(RebalancePoolRegistry).queued: '0.0 # {unit:ether}'
          - extraRewardState(RebalancePoolRegistry).rate: '0'
          - extraRewardState(RebalancePoolSplitter).finishAt: '0'
          - extraRewardState(RebalancePoolSplitter).lastUpdate: '0'
          - extraRewardState(RebalancePoolSplitter).periodLength: '0'
          - extraRewardState(RebalancePoolSplitter).queued: '0.0 # {unit:ether}'
          - extraRewardState(RebalancePoolSplitter).rate: '0'
          - extraRewardState(RebalanceWithBonusToken__0).finishAt: '0'
          - extraRewardState(RebalanceWithBonusToken__0).lastUpdate: '0'
          - extraRewardState(RebalanceWithBonusToken__0).periodLength: '0'
          - extraRewardState(RebalanceWithBonusToken__0).queued: '0.0 # {unit:ether}'
          - extraRewardState(RebalanceWithBonusToken__0).rate: '0'
          - extraRewardState(RebalanceWithBonusToken__1).finishAt: '0'
          - extraRewardState(RebalanceWithBonusToken__1).lastUpdate: '0'
          - extraRewardState(RebalanceWithBonusToken__1).periodLength: '0'
          - extraRewardState(RebalanceWithBonusToken__1).queued: '0.0 # {unit:ether}'
          - extraRewardState(RebalanceWithBonusToken__1).rate: '0'
          - extraRewardState(RebalanceWithBonusToken__2).finishAt: '0'
          - extraRewardState(RebalanceWithBonusToken__2).lastUpdate: '0'
          - extraRewardState(RebalanceWithBonusToken__2).periodLength: '0'
          - extraRewardState(RebalanceWithBonusToken__2).queued: '0.0 # {unit:ether}'
          - extraRewardState(RebalanceWithBonusToken__2).rate: '0'
          - extraRewardState(ReservePool).finishAt: '0'
          - extraRewardState(ReservePool).lastUpdate: '0'
          - extraRewardState(ReservePool).periodLength: '0'
          - extraRewardState(ReservePool).queued: '0.0 # {unit:ether}'
          - extraRewardState(ReservePool).rate: '0'
          - extraRewardState(SmartWalletWhitelist).finishAt: '0'
          - extraRewardState(SmartWalletWhitelist).lastUpdate: '0'
          - extraRewardState(SmartWalletWhitelist).periodLength: '0'
          - extraRewardState(SmartWalletWhitelist).queued: '0.0 # {unit:ether}'
          - extraRewardState(SmartWalletWhitelist).rate: '0'
          - extraRewardState(StETHAndxETHWrapper).finishAt: '0'
          - extraRewardState(StETHAndxETHWrapper).lastUpdate: '0'
          - extraRewardState(StETHAndxETHWrapper).periodLength: '0'
          - extraRewardState(StETHAndxETHWrapper).queued: '0.0 # {unit:ether}'
          - extraRewardState(StETHAndxETHWrapper).rate: '0'
          - extraRewardState(stETHTreasury).finishAt: '0'
          - extraRewardState(stETHTreasury).lastUpdate: '0'
          - extraRewardState(stETHTreasury).periodLength: '0'
          - extraRewardState(stETHTreasury).queued: '0.0 # {unit:ether}'
          - extraRewardState(stETHTreasury).rate: '0'
          - extraRewardState(Token_Minter).finishAt: '0'
          - extraRewardState(Token_Minter).lastUpdate: '0'
          - extraRewardState(Token_Minter).periodLength: '0'
          - extraRewardState(Token_Minter).queued: '0.0 # {unit:ether}'
          - extraRewardState(Token_Minter).rate: '0'
          - extraRewardState(Voting_Escrow).finishAt: '0'
          - extraRewardState(Voting_Escrow).lastUpdate: '0'
          - extraRewardState(Voting_Escrow).periodLength: '0'
          - extraRewardState(Voting_Escrow).queued: '0.0 # {unit:ether}'
          - extraRewardState(Voting_Escrow).rate: '0'
          - extraRewardState(WstETH).finishAt: '1703161475'
          - extraRewardState(WstETH).lastUpdate: '1703163575'
          - extraRewardState(WstETH).periodLength: '604800'
          - extraRewardState(WstETH).queued: '0.0 # {unit:ether}'
          - extraRewardState(WstETH).rate: '4779806319019'
          - extraRewardState(wstETHWrapper).finishAt: '0'
          - extraRewardState(wstETHWrapper).lastUpdate: '0'
          - extraRewardState(wstETHWrapper).periodLength: '0'
          - extraRewardState(wstETHWrapper).queued: '0.0 # {unit:ether}'
          - extraRewardState(wstETHWrapper).rate: '0'
          - extraRewardState(xHolderRedeemer).finishAt: '0'
          - extraRewardState(xHolderRedeemer).lastUpdate: '0'
          - extraRewardState(xHolderRedeemer).periodLength: '0'
          - extraRewardState(xHolderRedeemer).queued: '0.0 # {unit:ether}'
          - extraRewardState(xHolderRedeemer).rate: '0'
          - extraRewardState(xMinter).finishAt: '0'
          - extraRewardState(xMinter).lastUpdate: '0'
          - extraRewardState(xMinter).periodLength: '0'
          - extraRewardState(xMinter).queued: '0.0 # {unit:ether}'
          - extraRewardState(xMinter).rate: '0'
      - lastAssetLossError: uint256
        readings:
          - lastAssetLossError: '0.0 # {unit:ether}'
      - liquidatableCollateralRatio: uint256
        readings:
          - liquidatableCollateralRatio: '1.3055 # {unit:ether}'
      - liquidator: address
        readings:
          - liquidator: RebalanceWithBonusToken__0
      - market: address
        readings:
          - market: Market
      - owner: address
        readings:
          - owner: GnosisSafe__0
      - rewardManager: address
        readings:
          - rewardManager($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0x0000000000000000000000000000000000000000'
          - rewardManager(admin): '0x0000000000000000000000000000000000000000'
          - rewardManager(BoostableRebalancePool__0): '0x0000000000000000000000000000000000000000'
          - rewardManager(BoostableRebalancePool__1): '0x0000000000000000000000000000000000000000'
          - rewardManager(Booster): '0x0000000000000000000000000000000000000000'
          - rewardManager(Curve_DAO_Token): '0x0000000000000000000000000000000000000000'
          - rewardManager(fHolderLiquidator): '0x0000000000000000000000000000000000000000'
          - rewardManager(fHolderRedeemer): '0x0000000000000000000000000000000000000000'
          - rewardManager(fMinter): '0x0000000000000000000000000000000000000000'
          - rewardManager(FractionalToken): '0x0000000000000000000000000000000000000000'
          - rewardManager(FxETHTwapOracle): '0x0000000000000000000000000000000000000000'
          - rewardManager(FxnDepositor): '0x0000000000000000000000000000000000000000'
          - rewardManager(FxnVoterProxy): '0x0000000000000000000000000000000000000000'
          - rewardManager(Gauge_Controller): '0x0000000000000000000000000000000000000000'
          - rewardManager(GnosisSafe__0): '0x0000000000000000000000000000000000000000'
          - rewardManager(GnosisSafe__1): '0x0000000000000000000000000000000000000000'
          - rewardManager(LeveragedToken): '0x0000000000000000000000000000000000000000'
          - rewardManager(Lido): '0x0000000000000000000000000000000000000000'
          - rewardManager(Market): '0x0000000000000000000000000000000000000000'
          - rewardManager(PlatformFeeSpliter): '0x0000000000000000000000000000000000000000'
          - rewardManager(RebalancePoolRegistry): '0x0000000000000000000000000000000000000000'
          - rewardManager(RebalancePoolSplitter): '0x0000000000000000000000000000000000000000'
          - rewardManager(RebalanceWithBonusToken__0): '0x0000000000000000000000000000000000000000'
          - rewardManager(RebalanceWithBonusToken__1): '0x0000000000000000000000000000000000000000'
          - rewardManager(RebalanceWithBonusToken__2): '0x0000000000000000000000000000000000000000'
          - rewardManager(ReservePool): '0x0000000000000000000000000000000000000000'
          - rewardManager(SmartWalletWhitelist): '0x0000000000000000000000000000000000000000'
          - rewardManager(StETHAndxETHWrapper): '0x0000000000000000000000000000000000000000'
          - rewardManager(stETHTreasury): '0x0000000000000000000000000000000000000000'
          - rewardManager(Token_Minter): '0x0000000000000000000000000000000000000000'
          - rewardManager(Voting_Escrow): '0x0000000000000000000000000000000000000000'
          - rewardManager(WstETH): RebalancePoolSplitter
          - rewardManager(wstETHWrapper): '0x0000000000000000000000000000000000000000'
          - rewardManager(xHolderRedeemer): '0x0000000000000000000000000000000000000000'
          - rewardManager(xMinter): '0x0000000000000000000000000000000000000000'
      - totalSupply: uint256
        readings:
          - totalSupply: '14242 # {precision:0,unit:ether}'
      - totalUnlocking: uint256
        readings:
          - totalUnlocking: '19714.952389819415148249 # {unit:ether}'
      - treasury: address
        readings:
          - treasury: stETHTreasury
      - unlockDuration: uint256
        readings:
          - unlockDuration: '0.0 # {unit:ether}'
      - unlockedBalanceOf: uint256
        readings:
          - unlockedBalanceOf($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0.0 # {unit:ether}'
          - unlockedBalanceOf(admin): '0.0 # {unit:ether}'
          - unlockedBalanceOf(BoostableRebalancePool__0): '0.0 # {unit:ether}'
          - unlockedBalanceOf(BoostableRebalancePool__1): '0.0 # {unit:ether}'
          - unlockedBalanceOf(Booster): '0.0 # {unit:ether}'
          - unlockedBalanceOf(Curve_DAO_Token): '0.0 # {unit:ether}'
          - unlockedBalanceOf(fHolderLiquidator): '0.0 # {unit:ether}'
          - unlockedBalanceOf(fHolderRedeemer): '0.0 # {unit:ether}'
          - unlockedBalanceOf(fMinter): '0.0 # {unit:ether}'
          - unlockedBalanceOf(FractionalToken): '0.0 # {unit:ether}'
          - unlockedBalanceOf(FxETHTwapOracle): '0.0 # {unit:ether}'
          - unlockedBalanceOf(FxnDepositor): '0.0 # {unit:ether}'
          - unlockedBalanceOf(FxnVoterProxy): '0.0 # {unit:ether}'
          - unlockedBalanceOf(Gauge_Controller): '0.0 # {unit:ether}'
          - unlockedBalanceOf(GnosisSafe__0): '0.0 # {unit:ether}'
          - unlockedBalanceOf(GnosisSafe__1): '0.0 # {unit:ether}'
          - unlockedBalanceOf(LeveragedToken): '0.0 # {unit:ether}'
          - unlockedBalanceOf(Lido): '0.0 # {unit:ether}'
          - unlockedBalanceOf(Market): '0.0 # {unit:ether}'
          - unlockedBalanceOf(PlatformFeeSpliter): '0.0 # {unit:ether}'
          - unlockedBalanceOf(RebalancePoolRegistry): '0.0 # {unit:ether}'
          - unlockedBalanceOf(RebalancePoolSplitter): '0.0 # {unit:ether}'
          - unlockedBalanceOf(RebalanceWithBonusToken__0): '0.0 # {unit:ether}'
          - unlockedBalanceOf(RebalanceWithBonusToken__1): '0.0 # {unit:ether}'
          - unlockedBalanceOf(RebalanceWithBonusToken__2): '0.0 # {unit:ether}'
          - unlockedBalanceOf(ReservePool): '0.0 # {unit:ether}'
          - unlockedBalanceOf(SmartWalletWhitelist): '0.0 # {unit:ether}'
          - unlockedBalanceOf(StETHAndxETHWrapper): '0.0 # {unit:ether}'
          - unlockedBalanceOf(stETHTreasury): '0.0 # {unit:ether}'
          - unlockedBalanceOf(Token_Minter): '0.0 # {unit:ether}'
          - unlockedBalanceOf(Voting_Escrow): '0.0 # {unit:ether}'
          - unlockedBalanceOf(WstETH): '0.0 # {unit:ether}'
          - unlockedBalanceOf(wstETHWrapper): '0.0 # {unit:ether}'
          - unlockedBalanceOf(xHolderRedeemer): '0.0 # {unit:ether}'
          - unlockedBalanceOf(xMinter): '0.0 # {unit:ether}'
      - unlockingBalanceOf._balance: uint256
        unlockingBalanceOf._unlockAt: uint256
        readings:
          - unlockingBalanceOf($0x11E91BB6d1334585AA37D8F4fde3932C7960B938)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf($0x11E91BB6d1334585AA37D8F4fde3932C7960B938)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(admin)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(admin)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(BoostableRebalancePool__0)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(BoostableRebalancePool__0)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(BoostableRebalancePool__1)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(BoostableRebalancePool__1)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(Booster)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(Booster)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(Curve_DAO_Token)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(Curve_DAO_Token)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(fHolderLiquidator)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(fHolderLiquidator)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(fHolderRedeemer)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(fHolderRedeemer)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(fMinter)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(fMinter)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(FractionalToken)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(FractionalToken)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(FxETHTwapOracle)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(FxETHTwapOracle)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(FxnDepositor)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(FxnDepositor)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(FxnVoterProxy)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(FxnVoterProxy)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(Gauge_Controller)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(Gauge_Controller)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(GnosisSafe__0)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(GnosisSafe__0)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(GnosisSafe__1)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(GnosisSafe__1)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(LeveragedToken)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(LeveragedToken)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(Lido)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(Lido)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(Market)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(Market)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(PlatformFeeSpliter)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(PlatformFeeSpliter)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(RebalancePoolRegistry)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(RebalancePoolRegistry)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(RebalancePoolSplitter)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(RebalancePoolSplitter)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(RebalanceWithBonusToken__0)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(RebalanceWithBonusToken__0)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(RebalanceWithBonusToken__1)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(RebalanceWithBonusToken__1)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(RebalanceWithBonusToken__2)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(RebalanceWithBonusToken__2)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(ReservePool)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(ReservePool)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(SmartWalletWhitelist)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(SmartWalletWhitelist)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(StETHAndxETHWrapper)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(StETHAndxETHWrapper)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(stETHTreasury)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(stETHTreasury)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(Token_Minter)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(Token_Minter)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(Voting_Escrow)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(Voting_Escrow)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(WstETH)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(WstETH)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(wstETHWrapper)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(wstETHWrapper)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(xHolderRedeemer)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(xHolderRedeemer)._unlockAt: '0.0 # {unit:ether}'
          - unlockingBalanceOf(xMinter)._balance: '0.0 # {unit:ether}'
          - unlockingBalanceOf(xMinter)._unlockAt: '0.0 # {unit:ether}'
      - wrapper: address
        readings:
          - wrapper: wstETHWrapper
  - RebalancePoolRegistry: '0x4eEfea49e4D876599765d5375cF7314cD14C9d38'
    contract: RebalancePoolRegistry
    functions:
      - getPools: address[]
        readings:
          - getPools:
              - RebalancePool
              - BoostableRebalancePool__0
              - BoostableRebalancePool__1
      - owner: address
        readings:
          - owner: GnosisSafe__0
      - pendingOwner: address
        readings:
          - pendingOwner: '0x0000000000000000000000000000000000000000'
      - totalSupply: uint256
        readings:
          - totalSupply: '11472081 # {precision:0,unit:ether}'
  - RebalancePoolSplitter: '0x79c5f5b0753acE25ecdBdA4c2Bc86Ab074B6c2Bb'
    contract: RebalancePoolSplitter
    functions:
      - getReceivers._ratios: uint256[]
        getReceivers._receivers: address[]
        readings:
          - getReceivers($0x11E91BB6d1334585AA37D8F4fde3932C7960B938)._ratios: []
          - getReceivers($0x11E91BB6d1334585AA37D8F4fde3932C7960B938)._receivers: []
          - getReceivers(admin)._ratios: []
          - getReceivers(admin)._receivers: []
          - getReceivers(BoostableRebalancePool__0)._ratios: []
          - getReceivers(BoostableRebalancePool__0)._receivers: []
          - getReceivers(BoostableRebalancePool__1)._ratios: []
          - getReceivers(BoostableRebalancePool__1)._receivers: []
          - getReceivers(Booster)._ratios: []
          - getReceivers(Booster)._receivers: []
          - getReceivers(Curve_DAO_Token)._ratios:
              - '500000000'
              - '500000000'
          - getReceivers(Curve_DAO_Token)._receivers:
              - BoostableRebalancePool__0
              - BoostableRebalancePool__1
          - getReceivers(fHolderLiquidator)._ratios: []
          - getReceivers(fHolderLiquidator)._receivers: []
          - getReceivers(fHolderRedeemer)._ratios: []
          - getReceivers(fHolderRedeemer)._receivers: []
          - getReceivers(fMinter)._ratios: []
          - getReceivers(fMinter)._receivers: []
          - getReceivers(FractionalToken)._ratios: []
          - getReceivers(FractionalToken)._receivers: []
          - getReceivers(FxETHTwapOracle)._ratios: []
          - getReceivers(FxETHTwapOracle)._receivers: []
          - getReceivers(FxnDepositor)._ratios: []
          - getReceivers(FxnDepositor)._receivers: []
          - getReceivers(FxnVoterProxy)._ratios: []
          - getReceivers(FxnVoterProxy)._receivers: []
          - getReceivers(Gauge_Controller)._ratios: []
          - getReceivers(Gauge_Controller)._receivers: []
          - getReceivers(GnosisSafe__0)._ratios: []
          - getReceivers(GnosisSafe__0)._receivers: []
          - getReceivers(GnosisSafe__1)._ratios: []
          - getReceivers(GnosisSafe__1)._receivers: []
          - getReceivers(LeveragedToken)._ratios: []
          - getReceivers(LeveragedToken)._receivers: []
          - getReceivers(Lido)._ratios: []
          - getReceivers(Lido)._receivers: []
          - getReceivers(Market)._ratios: []
          - getReceivers(Market)._receivers: []
          - getReceivers(PlatformFeeSpliter)._ratios: []
          - getReceivers(PlatformFeeSpliter)._receivers: []
          - getReceivers(RebalancePool)._ratios: []
          - getReceivers(RebalancePool)._receivers: []
          - getReceivers(RebalancePoolRegistry)._ratios: []
          - getReceivers(RebalancePoolRegistry)._receivers: []
          - getReceivers(RebalanceWithBonusToken__0)._ratios: []
          - getReceivers(RebalanceWithBonusToken__0)._receivers: []
          - getReceivers(RebalanceWithBonusToken__1)._ratios: []
          - getReceivers(RebalanceWithBonusToken__1)._receivers: []
          - getReceivers(RebalanceWithBonusToken__2)._ratios: []
          - getReceivers(RebalanceWithBonusToken__2)._receivers: []
          - getReceivers(ReservePool)._ratios: []
          - getReceivers(ReservePool)._receivers: []
          - getReceivers(SmartWalletWhitelist)._ratios: []
          - getReceivers(SmartWalletWhitelist)._receivers: []
          - getReceivers(StETHAndxETHWrapper)._ratios: []
          - getReceivers(StETHAndxETHWrapper)._receivers: []
          - getReceivers(stETHTreasury)._ratios: []
          - getReceivers(stETHTreasury)._receivers: []
          - getReceivers(Token_Minter)._ratios: []
          - getReceivers(Token_Minter)._receivers: []
          - getReceivers(Voting_Escrow)._ratios: []
          - getReceivers(Voting_Escrow)._receivers: []
          - getReceivers(WstETH)._ratios:
              - '500000000'
              - '500000000'
          - getReceivers(WstETH)._receivers:
              - BoostableRebalancePool__0
              - BoostableRebalancePool__1
          - getReceivers(wstETHWrapper)._ratios: []
          - getReceivers(wstETHWrapper)._receivers: []
          - getReceivers(xHolderRedeemer)._ratios: []
          - getReceivers(xHolderRedeemer)._receivers: []
          - getReceivers(xMinter)._ratios: []
          - getReceivers(xMinter)._receivers: []
      - owner: address
        readings:
          - owner: GnosisSafe__0
      - pendingOwner: address
        readings:
          - pendingOwner: '0x0000000000000000000000000000000000000000'
      - splitter: address
        readings:
          - splitter($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0x0000000000000000000000000000000000000000'
          - splitter(admin): '0x0000000000000000000000000000000000000000'
          - splitter(BoostableRebalancePool__0): '0x0000000000000000000000000000000000000000'
          - splitter(BoostableRebalancePool__1): '0x0000000000000000000000000000000000000000'
          - splitter(Booster): '0x0000000000000000000000000000000000000000'
          - splitter(Curve_DAO_Token): '0x81243a88Dd9Fb963c643bD3f2194c2cA9CCFc428'
          - splitter(fHolderLiquidator): '0x0000000000000000000000000000000000000000'
          - splitter(fHolderRedeemer): '0x0000000000000000000000000000000000000000'
          - splitter(fMinter): '0x0000000000000000000000000000000000000000'
          - splitter(FractionalToken): '0x0000000000000000000000000000000000000000'
          - splitter(FxETHTwapOracle): '0x0000000000000000000000000000000000000000'
          - splitter(FxnDepositor): '0x0000000000000000000000000000000000000000'
          - splitter(FxnVoterProxy): '0x0000000000000000000000000000000000000000'
          - splitter(Gauge_Controller): '0x0000000000000000000000000000000000000000'
          - splitter(GnosisSafe__0): '0x0000000000000000000000000000000000000000'
          - splitter(GnosisSafe__1): '0x0000000000000000000000000000000000000000'
          - splitter(LeveragedToken): '0x0000000000000000000000000000000000000000'
          - splitter(Lido): '0x0000000000000000000000000000000000000000'
          - splitter(Market): '0x0000000000000000000000000000000000000000'
          - splitter(PlatformFeeSpliter): '0x0000000000000000000000000000000000000000'
          - splitter(RebalancePool): '0x0000000000000000000000000000000000000000'
          - splitter(RebalancePoolRegistry): '0x0000000000000000000000000000000000000000'
          - splitter(RebalanceWithBonusToken__0): '0x0000000000000000000000000000000000000000'
          - splitter(RebalanceWithBonusToken__1): '0x0000000000000000000000000000000000000000'
          - splitter(RebalanceWithBonusToken__2): '0x0000000000000000000000000000000000000000'
          - splitter(ReservePool): '0x0000000000000000000000000000000000000000'
          - splitter(SmartWalletWhitelist): '0x0000000000000000000000000000000000000000'
          - splitter(StETHAndxETHWrapper): '0x0000000000000000000000000000000000000000'
          - splitter(stETHTreasury): '0x0000000000000000000000000000000000000000'
          - splitter(Token_Minter): '0x0000000000000000000000000000000000000000'
          - splitter(Voting_Escrow): '0x0000000000000000000000000000000000000000'
          - splitter(WstETH): stETHTreasury
          - splitter(wstETHWrapper): '0x0000000000000000000000000000000000000000'
          - splitter(xHolderRedeemer): '0x0000000000000000000000000000000000000000'
          - splitter(xMinter): '0x0000000000000000000000000000000000000000'
  - RebalanceWithBonusToken__0: '0x17f21f468d77E6e35702a9Ae7a9da50Db7F6a4f4'
    contract: RebalanceWithBonusToken
    functions:
      - bonus: uint256
        readings:
          - bonus: '2.0 # {unit:ether}'
      - bonusToken: address
        readings:
          - bonusToken: Curve_DAO_Token
      - owner: address
        readings:
          - owner: GnosisSafe__0
      - stabilityPool: address
        readings:
          - stabilityPool: RebalancePool
  - RebalanceWithBonusToken__1: '0x74E9234A6e03c382A01Bb942B1aF05B639371309'
    contract: RebalanceWithBonusToken
    functions:
      - bonus: uint256
        readings:
          - bonus: '1.0 # {unit:ether}'
      - bonusToken: address
        readings:
          - bonusToken: Curve_DAO_Token
      - owner: address
        readings:
          - owner: GnosisSafe__0
      - stabilityPool: address
        readings:
          - stabilityPool: BoostableRebalancePool__0
  - RebalanceWithBonusToken__2: '0x5a161B94c737326cA115eC46f4Eaf4eEC5037dBE'
    contract: RebalanceWithBonusToken
    functions:
      - bonus: uint256
        readings:
          - bonus: '1.0 # {unit:ether}'
      - bonusToken: address
        readings:
          - bonusToken: Curve_DAO_Token
      - owner: address
        readings:
          - owner: GnosisSafe__0
      - stabilityPool: address
        readings:
          - stabilityPool: BoostableRebalancePool__1
  - ReservePool: '0x5d0Aacf75116d1645Db2B3d1Ca4b303ef0CA3752'
    contract: ReservePool
    functions:
      - bonusRatio: uint256
        readings:
          - bonusRatio($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0.0 # {unit:ether}'
          - bonusRatio(admin): '0.0 # {unit:ether}'
          - bonusRatio(BoostableRebalancePool__0): '0.0 # {unit:ether}'
          - bonusRatio(BoostableRebalancePool__1): '0.0 # {unit:ether}'
          - bonusRatio(Booster): '0.0 # {unit:ether}'
          - bonusRatio(Curve_DAO_Token): '0.0 # {unit:ether}'
          - bonusRatio(fHolderLiquidator): '0.0 # {unit:ether}'
          - bonusRatio(fHolderRedeemer): '0.0 # {unit:ether}'
          - bonusRatio(fMinter): '0.0 # {unit:ether}'
          - bonusRatio(FractionalToken): '0.0 # {unit:ether}'
          - bonusRatio(FxETHTwapOracle): '0.0 # {unit:ether}'
          - bonusRatio(FxnDepositor): '0.0 # {unit:ether}'
          - bonusRatio(FxnVoterProxy): '0.0 # {unit:ether}'
          - bonusRatio(Gauge_Controller): '0.0 # {unit:ether}'
          - bonusRatio(GnosisSafe__0): '0.0 # {unit:ether}'
          - bonusRatio(GnosisSafe__1): '0.0 # {unit:ether}'
          - bonusRatio(LeveragedToken): '0.0 # {unit:ether}'
          - bonusRatio(Lido): '0.05 # {unit:ether}'
          - bonusRatio(Market): '0.0 # {unit:ether}'
          - bonusRatio(PlatformFeeSpliter): '0.0 # {unit:ether}'
          - bonusRatio(RebalancePool): '0.0 # {unit:ether}'
          - bonusRatio(RebalancePoolRegistry): '0.0 # {unit:ether}'
          - bonusRatio(RebalancePoolSplitter): '0.0 # {unit:ether}'
          - bonusRatio(RebalanceWithBonusToken__0): '0.0 # {unit:ether}'
          - bonusRatio(RebalanceWithBonusToken__1): '0.0 # {unit:ether}'
          - bonusRatio(RebalanceWithBonusToken__2): '0.0 # {unit:ether}'
          - bonusRatio(SmartWalletWhitelist): '0.0 # {unit:ether}'
          - bonusRatio(StETHAndxETHWrapper): '0.0 # {unit:ether}'
          - bonusRatio(stETHTreasury): '0.0 # {unit:ether}'
          - bonusRatio(Token_Minter): '0.0 # {unit:ether}'
          - bonusRatio(Voting_Escrow): '0.0 # {unit:ether}'
          - bonusRatio(WstETH): '0.0 # {unit:ether}'
          - bonusRatio(wstETHWrapper): '0.0 # {unit:ether}'
          - bonusRatio(xHolderRedeemer): '0.0 # {unit:ether}'
          - bonusRatio(xMinter): '0.0 # {unit:ether}'
      - fToken: address
        readings:
          - fToken: FractionalToken
      - market: address
        readings:
          - market: Market
  - SmartWalletWhitelist: '0xD71B8B76015F296E53D41e8288a8a13eAfFff2ea'
    contract: SmartWalletWhitelist
    functions:
      - checker: address
        readings:
          - checker: '0x0000000000000000000000000000000000000000'
      - future_checker: address
        readings:
          - future_checker: '0x0000000000000000000000000000000000000000'
      - owner: address
        readings:
          - owner: GnosisSafe__0
  - StETHAndxETHWrapper: '0xC2BdBF323304eaBd9260b42E4d0d429Ca3481d6E'
    contract: StETHAndxETHWrapper
    functions:
      - dst: address
        readings:
          - dst: LeveragedToken
      - market: address
        readings:
          - market: Market
      - platform: address
        readings:
          - platform: PlatformFeeSpliter
      - src: address
        readings:
          - src: Lido
  - stETHTreasury: '0x0e5CAA5c889Bdf053c9A76395f62267E653AFbb0'
    contract: stETHTreasury
    functions:
      - baseToken: address
        readings:
          - baseToken: Lido
      - baseTokenCap: uint256
        readings:
          - baseTokenCap: '10000.0 # {unit:ether}'
      - beta: uint256
        readings:
          - beta: '0.1 # {unit:ether}'
      - collateralRatio: uint256
        readings:
          - collateralRatio: '1.878 # {unit:ether,precision:3}'
      - emaLeverageRatio.lastEmaValue: uint96
        emaLeverageRatio.lastTime: uint40
        emaLeverageRatio.lastValue: uint96
        emaLeverageRatio.sampleInterval: uint24
        readings:
          - emaLeverageRatio.lastEmaValue: '1985630000000000000 # {precision:-13}'
          - emaLeverageRatio.lastTime: '1707713590 # {precision:-1}'
          - emaLeverageRatio.lastValue: '1983800545126983346'
          - emaLeverageRatio.sampleInterval: '86400'
      - fToken: address
        readings:
          - fToken: FractionalToken
      - getCurrentNav._baseNav: uint256
        getCurrentNav._fNav: uint256
        getCurrentNav._xNav: uint256
        readings:
          - getCurrentNav._baseNav: '2500.87 # {unit:ether,precision:2}'
          - getCurrentNav._fNav: '1.036 # {unit:ether,precision:3}'
          - getCurrentNav._xNav: '1.534 # {unit:ether,precision:3}'
      - harvestBountyRatio: uint128
        readings:
          - harvestBountyRatio: '10000000000000000'
      - lastPermissionedPrice: uint256
        readings:
          - lastPermissionedPrice: '1836.7853 # {unit:ether}'
      - leverageRatio: uint256
        readings:
          - leverageRatio: '1.986 # {unit:ether,precision:3}'
      - market: address
        readings:
          - market: Market
      - owner: address
        readings:
          - owner: GnosisSafe__0
      - platform: address
        readings:
          - platform: PlatformFeeSpliter
      - priceOracle: address
        readings:
          - priceOracle: FxETHTwapOracle
      - rateProvider: address
        readings:
          - rateProvider: '0x0000000000000000000000000000000000000000'
      - rebalancePool: address
        readings:
          - rebalancePool: RebalancePoolSplitter
      - rebalancePoolRatio: uint128
        readings:
          - rebalancePoolRatio: '500000000000000000'
      - strategy: address
        readings:
          - strategy: '0x0000000000000000000000000000000000000000'
      - strategyUnderlying: uint256
        readings:
          - strategyUnderlying: '0.0 # {unit:ether}'
      - totalBaseToken: uint256
        readings:
          - totalBaseToken: '9444.807757115345432463 # {unit:ether}'
      - xToken: address
        readings:
          - xToken: LeveragedToken
  - Token_Minter: '0xC8b194925D55d5dE9555AD1db74c149329F71DeF'
    contract: Token Minter
    functions:
      - controller: address
        readings:
          - controller: Gauge_Controller
      - token: address
        readings:
          - token: Curve_DAO_Token
  - Voting_Escrow: '0xEC6B8A3F3605B083F7044C0F31f2cac0caf1d469'
    contract: Voting Escrow
    functions:
      - admin: address
        readings:
          - admin: GnosisSafe__0
      - balanceOf: uint256
        readings:
          - balanceOf($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0.0 # {unit:ether,precision:1}'
          - balanceOf(admin): '0.0 # {unit:ether,precision:1}'
          - balanceOf(BoostableRebalancePool__0): '0.0 # {unit:ether,precision:1}'
          - balanceOf(BoostableRebalancePool__1): '0.0 # {unit:ether,precision:1}'
          - balanceOf(Booster): '0.0 # {unit:ether,precision:1}'
          - balanceOf(Curve_DAO_Token): '0.0 # {unit:ether,precision:1}'
          - balanceOf(fHolderLiquidator): '0.0 # {unit:ether,precision:1}'
          - balanceOf(fHolderRedeemer): '0.0 # {unit:ether,precision:1}'
          - balanceOf(fMinter): '0.0 # {unit:ether,precision:1}'
          - balanceOf(FractionalToken): '0.0 # {unit:ether,precision:1}'
          - balanceOf(FxETHTwapOracle): '0.0 # {unit:ether,precision:1}'
          - balanceOf(FxnDepositor): '0.0 # {unit:ether,precision:1}'
          - balanceOf(FxnVoterProxy): '46358.3 # {unit:ether,precision:1}'
          - balanceOf(Gauge_Controller): '0.0 # {unit:ether,precision:1}'
          - balanceOf(GnosisSafe__0): '0.0 # {unit:ether,precision:1}'
          - balanceOf(GnosisSafe__1): '0.0 # {unit:ether,precision:1}'
          - balanceOf(LeveragedToken): '0.0 # {unit:ether,precision:1}'
          - balanceOf(Lido): '0.0 # {unit:ether,precision:1}'
          - balanceOf(Market): '0.0 # {unit:ether,precision:1}'
          - balanceOf(PlatformFeeSpliter): '0.0 # {unit:ether,precision:1}'
          - balanceOf(RebalancePool): '0.0 # {unit:ether,precision:1}'
          - balanceOf(RebalancePoolRegistry): '0.0 # {unit:ether,precision:1}'
          - balanceOf(RebalancePoolSplitter): '0.0 # {unit:ether,precision:1}'
          - balanceOf(RebalanceWithBonusToken__0): '0.0 # {unit:ether,precision:1}'
          - balanceOf(RebalanceWithBonusToken__1): '0.0 # {unit:ether,precision:1}'
          - balanceOf(RebalanceWithBonusToken__2): '0.0 # {unit:ether,precision:1}'
          - balanceOf(ReservePool): '0.0 # {unit:ether,precision:1}'
          - balanceOf(SmartWalletWhitelist): '0.0 # {unit:ether,precision:1}'
          - balanceOf(StETHAndxETHWrapper): '0.0 # {unit:ether,precision:1}'
          - balanceOf(stETHTreasury): '0.0 # {unit:ether,precision:1}'
          - balanceOf(Token_Minter): '0.0 # {unit:ether,precision:1}'
          - balanceOf(WstETH): '0.0 # {unit:ether,precision:1}'
          - balanceOf(wstETHWrapper): '0.0 # {unit:ether,precision:1}'
          - balanceOf(xHolderRedeemer): '0.0 # {unit:ether,precision:1}'
          - balanceOf(xMinter): '0.0 # {unit:ether,precision:1}'
      - controller: address
        readings:
          - controller: GnosisSafe__0
      - decimals: uint256
        readings:
          - decimals: '18 # {}'
      - epoch: uint256
        readings:
          - epoch: '310 # {}'
      - future_admin: address
        readings:
          - future_admin: GnosisSafe__0
      - future_smart_wallet_checker: address
        readings:
          - future_smart_wallet_checker: SmartWalletWhitelist
      - get_last_user_slope: int128
        readings:
          - get_last_user_slope($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0'
          - get_last_user_slope(admin): '0'
          - get_last_user_slope(BoostableRebalancePool__0): '0'
          - get_last_user_slope(BoostableRebalancePool__1): '0'
          - get_last_user_slope(Booster): '0'
          - get_last_user_slope(Curve_DAO_Token): '0'
          - get_last_user_slope(fHolderLiquidator): '0'
          - get_last_user_slope(fHolderRedeemer): '0'
          - get_last_user_slope(fMinter): '0'
          - get_last_user_slope(FractionalToken): '0'
          - get_last_user_slope(FxETHTwapOracle): '0'
          - get_last_user_slope(FxnDepositor): '0'
          - get_last_user_slope(FxnVoterProxy): '373190060460180'
          - get_last_user_slope(Gauge_Controller): '0'
          - get_last_user_slope(GnosisSafe__0): '0'
          - get_last_user_slope(GnosisSafe__1): '0'
          - get_last_user_slope(LeveragedToken): '0'
          - get_last_user_slope(Lido): '0'
          - get_last_user_slope(Market): '0'
          - get_last_user_slope(PlatformFeeSpliter): '0'
          - get_last_user_slope(RebalancePool): '0'
          - get_last_user_slope(RebalancePoolRegistry): '0'
          - get_last_user_slope(RebalancePoolSplitter): '0'
          - get_last_user_slope(RebalanceWithBonusToken__0): '0'
          - get_last_user_slope(RebalanceWithBonusToken__1): '0'
          - get_last_user_slope(RebalanceWithBonusToken__2): '0'
          - get_last_user_slope(ReservePool): '0'
          - get_last_user_slope(SmartWalletWhitelist): '0'
          - get_last_user_slope(StETHAndxETHWrapper): '0'
          - get_last_user_slope(stETHTreasury): '0'
          - get_last_user_slope(Token_Minter): '0'
          - get_last_user_slope(WstETH): '0'
          - get_last_user_slope(wstETHWrapper): '0'
          - get_last_user_slope(xHolderRedeemer): '0'
          - get_last_user_slope(xMinter): '0'
      - locked__end: uint256
        readings:
          - locked__end($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0.0 # {unit:ether}'
          - locked__end(admin): '0.0 # {unit:ether}'
          - locked__end(BoostableRebalancePool__0): '0.0 # {unit:ether}'
          - locked__end(BoostableRebalancePool__1): '0.0 # {unit:ether}'
          - locked__end(Booster): '0.0 # {unit:ether}'
          - locked__end(Curve_DAO_Token): '0.0 # {unit:ether}'
          - locked__end(fHolderLiquidator): '0.0 # {unit:ether}'
          - locked__end(fHolderRedeemer): '0.0 # {unit:ether}'
          - locked__end(fMinter): '0.0 # {unit:ether}'
          - locked__end(FractionalToken): '0.0 # {unit:ether}'
          - locked__end(FxETHTwapOracle): '0.0 # {unit:ether}'
          - locked__end(FxnDepositor): '0.0 # {unit:ether}'
          - locked__end(FxnVoterProxy): '0.0000000018319392 # {unit:ether}'
          - locked__end(Gauge_Controller): '0.0 # {unit:ether}'
          - locked__end(GnosisSafe__0): '0.0 # {unit:ether}'
          - locked__end(GnosisSafe__1): '0.0 # {unit:ether}'
          - locked__end(LeveragedToken): '0.0 # {unit:ether}'
          - locked__end(Lido): '0.0 # {unit:ether}'
          - locked__end(Market): '0.0 # {unit:ether}'
          - locked__end(PlatformFeeSpliter): '0.0 # {unit:ether}'
          - locked__end(RebalancePool): '0.0 # {unit:ether}'
          - locked__end(RebalancePoolRegistry): '0.0 # {unit:ether}'
          - locked__end(RebalancePoolSplitter): '0.0 # {unit:ether}'
          - locked__end(RebalanceWithBonusToken__0): '0.0 # {unit:ether}'
          - locked__end(RebalanceWithBonusToken__1): '0.0 # {unit:ether}'
          - locked__end(RebalanceWithBonusToken__2): '0.0 # {unit:ether}'
          - locked__end(ReservePool): '0.0 # {unit:ether}'
          - locked__end(SmartWalletWhitelist): '0.0 # {unit:ether}'
          - locked__end(StETHAndxETHWrapper): '0.0 # {unit:ether}'
          - locked__end(stETHTreasury): '0.0 # {unit:ether}'
          - locked__end(Token_Minter): '0.0 # {unit:ether}'
          - locked__end(WstETH): '0.0 # {unit:ether}'
          - locked__end(wstETHWrapper): '0.0 # {unit:ether}'
          - locked__end(xHolderRedeemer): '0.0 # {unit:ether}'
          - locked__end(xMinter): '0.0 # {unit:ether}'
      - smart_wallet_checker: address
        readings:
          - smart_wallet_checker: SmartWalletWhitelist
      - supply: uint256
        readings:
          - supply: '119837.435444639915103636 # {unit:ether}'
      - token: address
        readings:
          - token: Curve_DAO_Token
      - totalSupply: uint256
        readings:
          - totalSupply: '97569 # {precision:0,unit:ether}'
      - user_point_epoch: uint256
        readings:
          - user_point_epoch($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0.0 # {unit:ether}'
          - user_point_epoch(admin): '0.0 # {unit:ether}'
          - user_point_epoch(BoostableRebalancePool__0): '0.0 # {unit:ether}'
          - user_point_epoch(BoostableRebalancePool__1): '0.0 # {unit:ether}'
          - user_point_epoch(Booster): '0.0 # {unit:ether}'
          - user_point_epoch(Curve_DAO_Token): '0.0 # {unit:ether}'
          - user_point_epoch(fHolderLiquidator): '0.0 # {unit:ether}'
          - user_point_epoch(fHolderRedeemer): '0.0 # {unit:ether}'
          - user_point_epoch(fMinter): '0.0 # {unit:ether}'
          - user_point_epoch(FractionalToken): '0.0 # {unit:ether}'
          - user_point_epoch(FxETHTwapOracle): '0.0 # {unit:ether}'
          - user_point_epoch(FxnDepositor): '0.0 # {unit:ether}'
          - user_point_epoch(FxnVoterProxy): '0.000000000000000039 # {unit:ether}'
          - user_point_epoch(Gauge_Controller): '0.0 # {unit:ether}'
          - user_point_epoch(GnosisSafe__0): '0.0 # {unit:ether}'
          - user_point_epoch(GnosisSafe__1): '0.0 # {unit:ether}'
          - user_point_epoch(LeveragedToken): '0.0 # {unit:ether}'
          - user_point_epoch(Lido): '0.0 # {unit:ether}'
          - user_point_epoch(Market): '0.0 # {unit:ether}'
          - user_point_epoch(PlatformFeeSpliter): '0.0 # {unit:ether}'
          - user_point_epoch(RebalancePool): '0.0 # {unit:ether}'
          - user_point_epoch(RebalancePoolRegistry): '0.0 # {unit:ether}'
          - user_point_epoch(RebalancePoolSplitter): '0.0 # {unit:ether}'
          - user_point_epoch(RebalanceWithBonusToken__0): '0.0 # {unit:ether}'
          - user_point_epoch(RebalanceWithBonusToken__1): '0.0 # {unit:ether}'
          - user_point_epoch(RebalanceWithBonusToken__2): '0.0 # {unit:ether}'
          - user_point_epoch(ReservePool): '0.0 # {unit:ether}'
          - user_point_epoch(SmartWalletWhitelist): '0.0 # {unit:ether}'
          - user_point_epoch(StETHAndxETHWrapper): '0.0 # {unit:ether}'
          - user_point_epoch(stETHTreasury): '0.0 # {unit:ether}'
          - user_point_epoch(Token_Minter): '0.0 # {unit:ether}'
          - user_point_epoch(WstETH): '0.0 # {unit:ether}'
          - user_point_epoch(wstETHWrapper): '0.0 # {unit:ether}'
          - user_point_epoch(xHolderRedeemer): '0.0 # {unit:ether}'
          - user_point_epoch(xMinter): '0.0 # {unit:ether}'
  - WstETH: '0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0'
    contract: WstETH
    functions:
      - balanceOf: uint256
        readings:
          - balanceOf($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0.0 # {unit:ether,precision:2}'
          - balanceOf(admin): '0.0 # {unit:ether,precision:2}'
          - balanceOf(BoostableRebalancePool__0): '8.36 # {unit:ether,precision:2}'
          - balanceOf(BoostableRebalancePool__1): '8.28 # {unit:ether,precision:2}'
          - balanceOf(Booster): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Curve_DAO_Token): '0.0 # {unit:ether,precision:2}'
          - balanceOf(fHolderLiquidator): '0.0 # {unit:ether,precision:2}'
          - balanceOf(fHolderRedeemer): '0.0 # {unit:ether,precision:2}'
          - balanceOf(fMinter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FractionalToken): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FxETHTwapOracle): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FxnDepositor): '0.0 # {unit:ether,precision:2}'
          - balanceOf(FxnVoterProxy): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Gauge_Controller): '0.0 # {unit:ether,precision:2}'
          - balanceOf(GnosisSafe__0): '0.00 # {unit:ether,precision:2}'
          - balanceOf(GnosisSafe__1): '0.0 # {unit:ether,precision:2}'
          - balanceOf(LeveragedToken): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Lido): '0.02 # {unit:ether,precision:2}'
          - balanceOf(Market): '0.0 # {unit:ether,precision:2}'
          - balanceOf(PlatformFeeSpliter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalancePool): '1.16 # {unit:ether,precision:2}'
          - balanceOf(RebalancePoolRegistry): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalancePoolSplitter): '0.00 # {unit:ether,precision:2}'
          - balanceOf(RebalanceWithBonusToken__0): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalanceWithBonusToken__1): '0.0 # {unit:ether,precision:2}'
          - balanceOf(RebalanceWithBonusToken__2): '0.0 # {unit:ether,precision:2}'
          - balanceOf(ReservePool): '0.0 # {unit:ether,precision:2}'
          - balanceOf(SmartWalletWhitelist): '0.0 # {unit:ether,precision:2}'
          - balanceOf(StETHAndxETHWrapper): '0.0 # {unit:ether,precision:2}'
          - balanceOf(stETHTreasury): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Token_Minter): '0.0 # {unit:ether,precision:2}'
          - balanceOf(Voting_Escrow): '0.0 # {unit:ether,precision:2}'
          - balanceOf(wstETHWrapper): '0.0 # {unit:ether,precision:2}'
          - balanceOf(xHolderRedeemer): '0.0 # {unit:ether,precision:2}'
          - balanceOf(xMinter): '0.0 # {unit:ether,precision:2}'
      - decimals: uint8
        readings:
          - decimals: '18 # {}'
      - nonces: uint256
        readings:
          - nonces($0x11E91BB6d1334585AA37D8F4fde3932C7960B938): '0 # {}'
          - nonces(admin): '0 # {}'
          - nonces(BoostableRebalancePool__0): '0 # {}'
          - nonces(BoostableRebalancePool__1): '0 # {}'
          - nonces(Booster): '0 # {}'
          - nonces(Curve_DAO_Token): '0 # {}'
          - nonces(fHolderLiquidator): '0 # {}'
          - nonces(fHolderRedeemer): '0 # {}'
          - nonces(fMinter): '0 # {}'
          - nonces(FractionalToken): '0 # {}'
          - nonces(FxETHTwapOracle): '0 # {}'
          - nonces(FxnDepositor): '0 # {}'
          - nonces(FxnVoterProxy): '0 # {}'
          - nonces(Gauge_Controller): '0 # {}'
          - nonces(GnosisSafe__0): '0 # {}'
          - nonces(GnosisSafe__1): '0 # {}'
          - nonces(LeveragedToken): '0 # {}'
          - nonces(Lido): '0 # {}'
          - nonces(Market): '0 # {}'
          - nonces(PlatformFeeSpliter): '0 # {}'
          - nonces(RebalancePool): '0 # {}'
          - nonces(RebalancePoolRegistry): '0 # {}'
          - nonces(RebalancePoolSplitter): '0 # {}'
          - nonces(RebalanceWithBonusToken__0): '0 # {}'
          - nonces(RebalanceWithBonusToken__1): '0 # {}'
          - nonces(RebalanceWithBonusToken__2): '0 # {}'
          - nonces(ReservePool): '0 # {}'
          - nonces(SmartWalletWhitelist): '0 # {}'
          - nonces(StETHAndxETHWrapper): '0 # {}'
          - nonces(stETHTreasury): '0 # {}'
          - nonces(Token_Minter): '0 # {}'
          - nonces(Voting_Escrow): '0 # {}'
          - nonces(wstETHWrapper): '0 # {}'
          - nonces(xHolderRedeemer): '0 # {}'
          - nonces(xMinter): '0 # {}'
      - stETH: address
        readings:
          - stETH: Lido
      - stEthPerToken: uint256
        readings:
          - stEthPerToken: '1.156751534262936691 # {unit:ether}'
      - tokensPerStEth: uint256
        readings:
          - tokensPerStEth: '0.86448988428373581 # {unit:ether}'
      - totalSupply: uint256
        readings:
          - totalSupply: '3067377 # {precision:0,unit:ether}'
  - wstETHWrapper: '0xb09e34dD25d5E88a1E9Ff6F6418109927675B658'
    contract: wstETHWrapper
    functions:
      - dst: address
        readings:
          - dst: WstETH
      - src: address
        readings:
          - src: Lido
